{
  "command": {
    "BlogWww::GetCurrentUser": {
      "scoped_path": [
        "BlogWww",
        "GetCurrentUser"
      ],
      "scoped_name": "BlogWww::GetCurrentUser",
      "scoped_short_name": "GetCurrentUser",
      "scoped_prefix": [
        "BlogWww"
      ],
      "scoped_full_path": [
        "BlogWww",
        "GetCurrentUser"
      ],
      "scoped_full_name": "BlogWww::GetCurrentUser",
      "scoped_category": "command",
      "reference": "BlogWww::GetCurrentUser",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "types_depended_on": [
        "Foobara::Auth::Types::Role",
        "Foobara::Auth::Types::User",
        "array",
        "attributes",
        "duck",
        "email",
        "entity",
        "integer",
        "string",
        "symbol"
      ],
      "inputs_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "result_types_depended_on": [
        "Foobara::Auth::Types::Role",
        "array",
        "attributes",
        "duck",
        "email",
        "entity",
        "integer",
        "string",
        "symbol"
      ],
      "errors_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        },
        "runtime.unauthenticated": {
          "category": "runtime",
          "symbol": "unauthenticated",
          "key": "runtime.unauthenticated",
          "error": "Foobara::CommandConnector::UnauthenticatedError"
        }
      },
      "inputs_type": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "description": null,
      "result_type": "Foobara::Auth::Types::User",
      "result_transformers": [
        "SensitiveValueRemover::Foobara::Auth::Types::User"
      ],
      "errors_transformers": [
        "Foobara::CommandConnectors::Transformers::AuthErrorsTransformer"
      ],
      "serializers": [
        "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
        "Foobara::CommandConnectors::Serializers::AtomicSerializer",
        "Foobara::CommandConnectors::Serializers::JsonSerializer"
      ],
      "request_mutators": [
        "Foobara::CommandConnectors::Http::SetInputToProcResult::Anon1"
      ],
      "requires_authentication": true,
      "authenticator": {
        "symbol": "bearer",
        "explanation": "Expects an access token in authorization header in format of: Bearer <token>"
      }
    },
    "ComputeExponent": {
      "scoped_path": [
        "ComputeExponent"
      ],
      "scoped_name": "ComputeExponent",
      "scoped_short_name": "ComputeExponent",
      "scoped_prefix": null,
      "scoped_full_path": [
        "ComputeExponent"
      ],
      "scoped_full_name": "ComputeExponent",
      "scoped_category": "command",
      "reference": "ComputeExponent",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "integer",
        "number",
        "symbol"
      ],
      "inputs_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "integer",
        "symbol"
      ],
      "result_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "number",
        "symbol"
      ],
      "errors_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "possible_errors": {
        "data.base.cannot_cast": {
          "path": [
            "base"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.base.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.exponent.cannot_cast": {
          "path": [
            "exponent"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.exponent.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        },
        "runtime.unauthenticated": {
          "category": "runtime",
          "symbol": "unauthenticated",
          "key": "runtime.unauthenticated",
          "error": "Foobara::CommandConnector::UnauthenticatedError"
        }
      },
      "inputs_type": {
        "type": "attributes",
        "element_type_declarations": {
          "base": "integer",
          "exponent": "integer"
        }
      },
      "description": null,
      "result_type": "integer",
      "errors_transformers": [
        "Foobara::CommandConnectors::Transformers::AuthErrorsTransformer"
      ],
      "serializers": [
        "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
        "Foobara::CommandConnectors::Serializers::AtomicSerializer",
        "Foobara::CommandConnectors::Serializers::JsonSerializer"
      ],
      "requires_authentication": true,
      "authenticator": {
        "symbol": "bearer",
        "explanation": "Expects an access token in authorization header in format of: Bearer <token>"
      }
    },
    "Foobara::Auth::Login": {
      "scoped_path": [
        "Login"
      ],
      "scoped_name": "Login",
      "scoped_short_name": "Login",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "Login"
      ],
      "scoped_full_name": "Foobara::Auth::Login",
      "scoped_category": "command",
      "reference": "Foobara::Auth::Login",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "email",
        "integer",
        "string",
        "symbol"
      ],
      "inputs_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "string",
        "symbol"
      ],
      "result_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "errors_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "email",
        "integer",
        "string",
        "symbol"
      ],
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.missing_required_attribute": {
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        },
        "data.plaintext_password.cannot_cast": {
          "path": [
            "plaintext_password"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.plaintext_password.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.plaintext_password.missing_required_attribute": {
          "path": [
            "plaintext_password"
          ],
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.plaintext_password.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        },
        "data.username_or_email.cannot_cast": {
          "path": [
            "username_or_email"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.username_or_email.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "foobara::auth::find_user>runtime.user_not_found": {
          "runtime_path": [
            "foobara::auth::find_user"
          ],
          "category": "runtime",
          "symbol": "user_not_found",
          "key": "foobara::auth::find_user>runtime.user_not_found",
          "error": "Foobara::Auth::FindUser::UserNotFoundError"
        },
        "runtime.invalid_password": {
          "category": "runtime",
          "symbol": "invalid_password",
          "key": "runtime.invalid_password",
          "error": "Foobara::Auth::Login::InvalidPasswordError"
        },
        "runtime.no_user_id_email_or_username_given": {
          "category": "runtime",
          "symbol": "no_user_id_email_or_username_given",
          "key": "runtime.no_user_id_email_or_username_given",
          "error": "Foobara::Auth::Login::NoUserIdEmailOrUsernameGivenError"
        }
      },
      "depends_on": [
        "Foobara::Auth::BuildAccessToken",
        "Foobara::Auth::CreateRefreshToken",
        "Foobara::Auth::FindUser",
        "Foobara::Auth::VerifyPassword"
      ],
      "inputs_type": {
        "type": "attributes",
        "element_type_declarations": {
          "username_or_email": {
            "allow_nil": true,
            "type": "string"
          },
          "plaintext_password": {
            "sensitive_exposed": true,
            "type": "string"
          }
        },
        "required": [
          "plaintext_password"
        ]
      },
      "description": null,
      "result_type": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "inputs_transformers": [
        "plaintext_password__username_or_email"
      ],
      "serializers": [
        "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
        "Foobara::CommandConnectors::Serializers::AtomicSerializer",
        "Foobara::CommandConnectors::Serializers::JsonSerializer"
      ],
      "response_mutators": [
        "Foobara::AuthHttp::MoveRefreshTokenToCookie",
        "Foobara::AuthHttp::MoveAccessTokenToHeader"
      ]
    },
    "Foobara::Auth::Logout": {
      "scoped_path": [
        "Logout"
      ],
      "scoped_name": "Logout",
      "scoped_short_name": "Logout",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "Logout"
      ],
      "scoped_full_name": "Foobara::Auth::Logout",
      "scoped_category": "command",
      "reference": "Foobara::Auth::Logout",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "types_depended_on": [
        "Foobara::Auth::token_state",
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "inputs_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "result_types_depended_on": [
        "array",
        "attributes",
        "symbol"
      ],
      "errors_types_depended_on": [
        "Foobara::Auth::token_state",
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        },
        "foobara::auth::verify_token>runtime.expired_token": {
          "runtime_path": [
            "foobara::auth::verify_token"
          ],
          "category": "runtime",
          "symbol": "expired_token",
          "key": "foobara::auth::verify_token>runtime.expired_token",
          "error": "Foobara::Auth::VerifyToken::ExpiredTokenError"
        },
        "foobara::auth::verify_token>runtime.inactive_token": {
          "runtime_path": [
            "foobara::auth::verify_token"
          ],
          "category": "runtime",
          "symbol": "inactive_token",
          "key": "foobara::auth::verify_token>runtime.inactive_token",
          "error": "Foobara::Auth::VerifyToken::InactiveTokenError"
        },
        "foobara::auth::verify_token>runtime.token_does_not_exist": {
          "runtime_path": [
            "foobara::auth::verify_token"
          ],
          "category": "runtime",
          "symbol": "token_does_not_exist",
          "key": "foobara::auth::verify_token>runtime.token_does_not_exist",
          "error": "Foobara::Auth::VerifyToken::TokenDoesNotExistError"
        }
      },
      "depends_on": [
        "Foobara::Auth::VerifyToken"
      ],
      "inputs_type": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "description": null,
      "result_type": "duck",
      "serializers": [
        "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
        "Foobara::CommandConnectors::Serializers::AtomicSerializer",
        "Foobara::CommandConnectors::Serializers::JsonSerializer"
      ],
      "response_mutators": [
        "Foobara::AuthHttp::ClearAccessTokenHeader"
      ],
      "request_mutators": [
        "Foobara::AuthHttp::SetRefreshTokenFromCookie"
      ]
    },
    "Foobara::Auth::RefreshLogin": {
      "scoped_path": [
        "RefreshLogin"
      ],
      "scoped_name": "RefreshLogin",
      "scoped_short_name": "RefreshLogin",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "RefreshLogin"
      ],
      "scoped_full_name": "Foobara::Auth::RefreshLogin",
      "scoped_category": "command",
      "reference": "Foobara::Auth::RefreshLogin",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "types_depended_on": [
        "Foobara::Auth::token_state",
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "inputs_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "result_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "errors_types_depended_on": [
        "Foobara::Auth::token_state",
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        },
        "foobara::auth::verify_token>runtime.expired_token": {
          "runtime_path": [
            "foobara::auth::verify_token"
          ],
          "category": "runtime",
          "symbol": "expired_token",
          "key": "foobara::auth::verify_token>runtime.expired_token",
          "error": "Foobara::Auth::VerifyToken::ExpiredTokenError"
        },
        "foobara::auth::verify_token>runtime.inactive_token": {
          "runtime_path": [
            "foobara::auth::verify_token"
          ],
          "category": "runtime",
          "symbol": "inactive_token",
          "key": "foobara::auth::verify_token>runtime.inactive_token",
          "error": "Foobara::Auth::VerifyToken::InactiveTokenError"
        },
        "foobara::auth::verify_token>runtime.token_does_not_exist": {
          "runtime_path": [
            "foobara::auth::verify_token"
          ],
          "category": "runtime",
          "symbol": "token_does_not_exist",
          "key": "foobara::auth::verify_token>runtime.token_does_not_exist",
          "error": "Foobara::Auth::VerifyToken::TokenDoesNotExistError"
        },
        "runtime.invalid_refresh_token": {
          "category": "runtime",
          "symbol": "invalid_refresh_token",
          "key": "runtime.invalid_refresh_token",
          "error": "Foobara::Auth::RefreshLogin::InvalidRefreshTokenError"
        }
      },
      "depends_on": [
        "Foobara::Auth::BuildAccessToken",
        "Foobara::Auth::CreateRefreshToken",
        "Foobara::Auth::VerifyToken"
      ],
      "inputs_type": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "description": null,
      "result_type": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "inputs_transformers": [
        "refresh_token"
      ],
      "serializers": [
        "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
        "Foobara::CommandConnectors::Serializers::AtomicSerializer",
        "Foobara::CommandConnectors::Serializers::JsonSerializer"
      ],
      "response_mutators": [
        "Foobara::AuthHttp::MoveRefreshTokenToCookie",
        "Foobara::AuthHttp::MoveAccessTokenToHeader"
      ],
      "request_mutators": [
        "Foobara::AuthHttp::SetRefreshTokenFromCookie"
      ]
    },
    "Foobara::Auth::Register": {
      "scoped_path": [
        "Register"
      ],
      "scoped_name": "Register",
      "scoped_short_name": "Register",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "Register"
      ],
      "scoped_full_name": "Foobara::Auth::Register",
      "scoped_category": "command",
      "reference": "Foobara::Auth::Register",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "types_depended_on": [
        "Foobara::Auth::Types::Role",
        "Foobara::Auth::Types::User",
        "array",
        "attributes",
        "duck",
        "email",
        "entity",
        "integer",
        "string",
        "symbol"
      ],
      "inputs_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "email",
        "string",
        "symbol"
      ],
      "result_types_depended_on": [
        "Foobara::Auth::Types::Role",
        "array",
        "attributes",
        "duck",
        "email",
        "entity",
        "integer",
        "string",
        "symbol"
      ],
      "errors_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.email.cannot_cast": {
          "path": [
            "email"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.email.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.email.cannot_exceed64_characters": {
          "path": [
            "email"
          ],
          "category": "data",
          "symbol": "cannot_exceed64_characters",
          "key": "data.email.cannot_exceed64_characters",
          "error": "email::Validators::CannotExceed64Characters::CannotExceed64CharactersError"
        },
        "data.email.cannot_have_multiple_at_signs": {
          "path": [
            "email"
          ],
          "category": "data",
          "symbol": "cannot_have_multiple_at_signs",
          "key": "data.email.cannot_have_multiple_at_signs",
          "error": "email::Validators::CannotHaveMultipleAtSigns::CannotHaveMultipleAtSignsError"
        },
        "data.email.domain_cannot_start_with_or_end_with_a_hyphen": {
          "path": [
            "email"
          ],
          "category": "data",
          "symbol": "domain_cannot_start_with_or_end_with_a_hyphen",
          "key": "data.email.domain_cannot_start_with_or_end_with_a_hyphen",
          "error": "email::Validators::DomainCannotStartWithOrEndWithAHyphen::DomainCannotStartWithOrEndWithAHyphenError"
        },
        "data.email.first_part_cannot_be_empty": {
          "path": [
            "email"
          ],
          "category": "data",
          "symbol": "first_part_cannot_be_empty",
          "key": "data.email.first_part_cannot_be_empty",
          "error": "email::Validators::FirstPartCannotBeEmpty::FirstPartCannotBeEmptyError"
        },
        "data.email.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row": {
          "path": [
            "email"
          ],
          "category": "data",
          "symbol": "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
          "key": "data.email.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
          "error": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARow::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError"
        },
        "data.email.first_part_has_bad_characters": {
          "path": [
            "email"
          ],
          "category": "data",
          "symbol": "first_part_has_bad_characters",
          "key": "data.email.first_part_has_bad_characters",
          "error": "email::Validators::FirstPartHasBadCharacters::FirstPartHasBadCharactersError"
        },
        "data.email.must_have_an_at_sign": {
          "path": [
            "email"
          ],
          "category": "data",
          "symbol": "must_have_an_at_sign",
          "key": "data.email.must_have_an_at_sign",
          "error": "email::Validators::MustHaveAnAtSign::MustHaveAnAtSignError"
        },
        "data.email.second_part_cannot_be_empty": {
          "path": [
            "email"
          ],
          "category": "data",
          "symbol": "second_part_cannot_be_empty",
          "key": "data.email.second_part_cannot_be_empty",
          "error": "email::Validators::SecondPartCannotBeEmpty::SecondPartCannotBeEmptyError"
        },
        "data.email.second_part_has_bad_characters": {
          "path": [
            "email"
          ],
          "category": "data",
          "symbol": "second_part_has_bad_characters",
          "key": "data.email.second_part_has_bad_characters",
          "error": "email::Validators::SecondPartHasBadCharacters::SecondPartHasBadCharactersError"
        },
        "data.missing_required_attribute": {
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        },
        "data.plaintext_password.cannot_cast": {
          "path": [
            "plaintext_password"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.plaintext_password.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        },
        "data.username.cannot_cast": {
          "path": [
            "username"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.username.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.username.missing_required_attribute": {
          "path": [
            "username"
          ],
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.username.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        }
      },
      "depends_on": [
        "Foobara::Auth::CreateUser",
        "Foobara::Auth::SetPassword"
      ],
      "inputs_type": {
        "type": "attributes",
        "element_type_declarations": {
          "username": "string",
          "email": {
            "allow_nil": true,
            "type": "email"
          },
          "plaintext_password": {
            "allow_nil": true,
            "sensitive_exposed": true,
            "type": "string"
          }
        },
        "required": [
          "username"
        ]
      },
      "description": null,
      "result_type": "Foobara::Auth::Types::User",
      "inputs_transformers": [
        "email__plaintext_password__username"
      ],
      "result_transformers": [
        "SensitiveValueRemover::Foobara::Auth::Types::User"
      ],
      "serializers": [
        "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
        "Foobara::CommandConnectors::Serializers::AtomicSerializer",
        "Foobara::CommandConnectors::Serializers::JsonSerializer"
      ]
    }
  },
  "domain": {
    "Foobara::Auth": {
      "scoped_path": [
        "Auth"
      ],
      "scoped_name": "Auth",
      "scoped_short_name": "Auth",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Auth"
      ],
      "scoped_full_name": "Foobara::Auth",
      "scoped_category": "domain",
      "reference": "Foobara::Auth",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "organization",
        "Foobara"
      ],
      "commands": [
        "Foobara::Auth::Login",
        "Foobara::Auth::Logout",
        "Foobara::Auth::RefreshLogin",
        "Foobara::Auth::Register"
      ],
      "types": [
        "Foobara::Auth::Types::Role",
        "Foobara::Auth::Types::User",
        "Foobara::Auth::token_state"
      ]
    },
    "global_organization::global_domain": {
      "scoped_path": [],
      "scoped_name": null,
      "scoped_short_name": null,
      "scoped_prefix": [],
      "scoped_full_path": [],
      "scoped_full_name": "",
      "scoped_category": "domain",
      "reference": "global_organization::global_domain",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "organization",
        "global_organization"
      ],
      "commands": [
        "BlogWww::GetCurrentUser",
        "ComputeExponent"
      ],
      "types": [
        "array",
        "associative_array",
        "atomic_duck",
        "attributes",
        "detached_entity",
        "duck",
        "duckture",
        "email",
        "entity",
        "integer",
        "model",
        "number",
        "string",
        "symbol"
      ]
    }
  },
  "error": {
    "Foobara::Auth::FindUser::UserNotFoundError": {
      "scoped_path": [
        "FindUser",
        "UserNotFoundError"
      ],
      "scoped_name": "FindUser::UserNotFoundError",
      "scoped_short_name": "UserNotFoundError",
      "scoped_prefix": [
        "FindUser"
      ],
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "FindUser",
        "UserNotFoundError"
      ],
      "scoped_full_name": "Foobara::Auth::FindUser::UserNotFoundError",
      "scoped_category": "error",
      "reference": "Foobara::Auth::FindUser::UserNotFoundError",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "email",
        "integer",
        "string",
        "symbol"
      ],
      "category": "runtime",
      "symbol": "user_not_found",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "id": "integer",
          "username": "string",
          "email": "email"
        }
      },
      "is_fatal": true,
      "error_class": "Foobara::Auth::FindUser::UserNotFoundError",
      "base_error": "Foobara::RuntimeError"
    },
    "Foobara::Auth::Login::InvalidPasswordError": {
      "scoped_path": [
        "InvalidPasswordError"
      ],
      "scoped_name": "InvalidPasswordError",
      "scoped_short_name": "InvalidPasswordError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "Login",
        "InvalidPasswordError"
      ],
      "scoped_full_name": "Foobara::Auth::Login::InvalidPasswordError",
      "scoped_category": "error",
      "reference": "Foobara::Auth::Login::InvalidPasswordError",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "command",
        "Foobara::Auth::Login"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "runtime",
      "symbol": "invalid_password",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "is_fatal": true,
      "error_class": "Foobara::Auth::Login::InvalidPasswordError",
      "base_error": "Foobara::RuntimeError"
    },
    "Foobara::Auth::Login::NoUserIdEmailOrUsernameGivenError": {
      "scoped_path": [
        "NoUserIdEmailOrUsernameGivenError"
      ],
      "scoped_name": "NoUserIdEmailOrUsernameGivenError",
      "scoped_short_name": "NoUserIdEmailOrUsernameGivenError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "Login",
        "NoUserIdEmailOrUsernameGivenError"
      ],
      "scoped_full_name": "Foobara::Auth::Login::NoUserIdEmailOrUsernameGivenError",
      "scoped_category": "error",
      "reference": "Foobara::Auth::Login::NoUserIdEmailOrUsernameGivenError",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "command",
        "Foobara::Auth::Login"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "runtime",
      "symbol": "no_user_id_email_or_username_given",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "is_fatal": true,
      "error_class": "Foobara::Auth::Login::NoUserIdEmailOrUsernameGivenError",
      "base_error": "Foobara::RuntimeError"
    },
    "Foobara::Auth::RefreshLogin::InvalidRefreshTokenError": {
      "scoped_path": [
        "InvalidRefreshTokenError"
      ],
      "scoped_name": "InvalidRefreshTokenError",
      "scoped_short_name": "InvalidRefreshTokenError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "RefreshLogin",
        "InvalidRefreshTokenError"
      ],
      "scoped_full_name": "Foobara::Auth::RefreshLogin::InvalidRefreshTokenError",
      "scoped_category": "error",
      "reference": "Foobara::Auth::RefreshLogin::InvalidRefreshTokenError",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "command",
        "Foobara::Auth::RefreshLogin"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "runtime",
      "symbol": "invalid_refresh_token",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "is_fatal": true,
      "error_class": "Foobara::Auth::RefreshLogin::InvalidRefreshTokenError",
      "base_error": "Foobara::RuntimeError"
    },
    "Foobara::Auth::VerifyToken::ExpiredTokenError": {
      "scoped_path": [
        "VerifyToken",
        "ExpiredTokenError"
      ],
      "scoped_name": "VerifyToken::ExpiredTokenError",
      "scoped_short_name": "ExpiredTokenError",
      "scoped_prefix": [
        "VerifyToken"
      ],
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "VerifyToken",
        "ExpiredTokenError"
      ],
      "scoped_full_name": "Foobara::Auth::VerifyToken::ExpiredTokenError",
      "scoped_category": "error",
      "reference": "Foobara::Auth::VerifyToken::ExpiredTokenError",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "runtime",
      "symbol": "expired_token",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "is_fatal": true,
      "error_class": "Foobara::Auth::VerifyToken::ExpiredTokenError",
      "base_error": "Foobara::RuntimeError"
    },
    "Foobara::Auth::VerifyToken::InactiveTokenError": {
      "scoped_path": [
        "VerifyToken",
        "InactiveTokenError"
      ],
      "scoped_name": "VerifyToken::InactiveTokenError",
      "scoped_short_name": "InactiveTokenError",
      "scoped_prefix": [
        "VerifyToken"
      ],
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "VerifyToken",
        "InactiveTokenError"
      ],
      "scoped_full_name": "Foobara::Auth::VerifyToken::InactiveTokenError",
      "scoped_category": "error",
      "reference": "Foobara::Auth::VerifyToken::InactiveTokenError",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "types_depended_on": [
        "Foobara::Auth::token_state",
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "runtime",
      "symbol": "inactive_token",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "state": "Foobara::Auth::token_state"
        },
        "required": [
          "state"
        ]
      },
      "is_fatal": true,
      "error_class": "Foobara::Auth::VerifyToken::InactiveTokenError",
      "base_error": "Foobara::RuntimeError"
    },
    "Foobara::Auth::VerifyToken::TokenDoesNotExistError": {
      "scoped_path": [
        "VerifyToken",
        "TokenDoesNotExistError"
      ],
      "scoped_name": "VerifyToken::TokenDoesNotExistError",
      "scoped_short_name": "TokenDoesNotExistError",
      "scoped_prefix": [
        "VerifyToken"
      ],
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "VerifyToken",
        "TokenDoesNotExistError"
      ],
      "scoped_full_name": "Foobara::Auth::VerifyToken::TokenDoesNotExistError",
      "scoped_category": "error",
      "reference": "Foobara::Auth::VerifyToken::TokenDoesNotExistError",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "runtime",
      "symbol": "token_does_not_exist",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "is_fatal": true,
      "error_class": "Foobara::Auth::VerifyToken::TokenDoesNotExistError",
      "base_error": "Foobara::RuntimeError"
    },
    "Foobara::CommandConnector::CommandConnectorError": {
      "scoped_path": [
        "CommandConnector",
        "CommandConnectorError"
      ],
      "scoped_name": "CommandConnector::CommandConnectorError",
      "scoped_short_name": "CommandConnectorError",
      "scoped_prefix": [
        "CommandConnector"
      ],
      "scoped_full_path": [
        "Foobara",
        "CommandConnector",
        "CommandConnectorError"
      ],
      "scoped_full_name": "Foobara::CommandConnector::CommandConnectorError",
      "scoped_category": "error",
      "reference": "Foobara::CommandConnector::CommandConnectorError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "organization",
        "Foobara"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "runtime",
      "symbol": "command_connector",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "is_fatal": true,
      "error_class": "Foobara::CommandConnector::CommandConnectorError",
      "base_error": "Foobara::RuntimeError"
    },
    "Foobara::CommandConnector::UnauthenticatedError": {
      "scoped_path": [
        "CommandConnector",
        "UnauthenticatedError"
      ],
      "scoped_name": "CommandConnector::UnauthenticatedError",
      "scoped_short_name": "UnauthenticatedError",
      "scoped_prefix": [
        "CommandConnector"
      ],
      "scoped_full_path": [
        "Foobara",
        "CommandConnector",
        "UnauthenticatedError"
      ],
      "scoped_full_name": "Foobara::CommandConnector::UnauthenticatedError",
      "scoped_category": "error",
      "reference": "Foobara::CommandConnector::UnauthenticatedError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "organization",
        "Foobara"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "runtime",
      "symbol": "unauthenticated",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "is_fatal": true,
      "error_class": "Foobara::CommandConnector::UnauthenticatedError",
      "base_error": "Foobara::CommandConnector::CommandConnectorError"
    },
    "Foobara::RuntimeError": {
      "scoped_path": [
        "RuntimeError"
      ],
      "scoped_name": "RuntimeError",
      "scoped_short_name": "RuntimeError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "RuntimeError"
      ],
      "scoped_full_name": "Foobara::RuntimeError",
      "scoped_category": "error",
      "reference": "Foobara::RuntimeError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "organization",
        "Foobara"
      ],
      "category": "runtime",
      "symbol": "runtime",
      "is_fatal": true,
      "error_class": "Foobara::RuntimeError",
      "abstract": true
    },
    "Foobara::Value::DataError": {
      "scoped_path": [
        "Foobara",
        "Value",
        "DataError"
      ],
      "scoped_name": "Foobara::Value::DataError",
      "scoped_short_name": "DataError",
      "scoped_prefix": [
        "Foobara",
        "Value"
      ],
      "scoped_full_path": [
        "Foobara",
        "Value",
        "DataError"
      ],
      "scoped_full_name": "Foobara::Value::DataError",
      "scoped_category": "error",
      "reference": "Foobara::Value::DataError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "data",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "attribute_name": "symbol",
          "value": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::Value::DataError"
    },
    "Foobara::Value::Processor::Casting::CannotCastError": {
      "scoped_path": [
        "Foobara",
        "Value",
        "Processor",
        "Casting",
        "CannotCastError"
      ],
      "scoped_name": "Foobara::Value::Processor::Casting::CannotCastError",
      "scoped_short_name": "CannotCastError",
      "scoped_prefix": [
        "Foobara",
        "Value",
        "Processor",
        "Casting"
      ],
      "scoped_full_path": [
        "Foobara",
        "Value",
        "Processor",
        "Casting",
        "CannotCastError"
      ],
      "scoped_full_name": "Foobara::Value::Processor::Casting::CannotCastError",
      "scoped_category": "error",
      "reference": "Foobara::Value::Processor::Casting::CannotCastError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "cannot_cast",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "cast_to": "duck",
          "value": "duck",
          "attribute_name": "symbol"
        }
      },
      "is_fatal": true,
      "error_class": "Foobara::Value::Processor::Casting::CannotCastError",
      "base_error": "Foobara::Value::DataError"
    },
    "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError": {
      "scoped_path": [
        "UnexpectedAttributesError"
      ],
      "scoped_name": "UnexpectedAttributesError",
      "scoped_short_name": "UnexpectedAttributesError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "attributes",
        "SupportedProcessors",
        "ElementTypeDeclarations",
        "UnexpectedAttributesError"
      ],
      "scoped_full_name": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError",
      "scoped_category": "error",
      "reference": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "attributes"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "unexpected_attributes",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "unexpected_attributes": {
            "type": "array",
            "element_type_declaration": "symbol"
          },
          "allowed_attributes": {
            "type": "array",
            "element_type_declaration": "symbol"
          }
        }
      },
      "is_fatal": true,
      "error_class": "Foobara::BuiltinTypes::Attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError",
      "base_error": "Foobara::Value::DataError"
    },
    "attributes::SupportedValidators::Required::MissingRequiredAttributeError": {
      "scoped_path": [
        "MissingRequiredAttributeError"
      ],
      "scoped_name": "MissingRequiredAttributeError",
      "scoped_short_name": "MissingRequiredAttributeError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "attributes",
        "SupportedValidators",
        "Required",
        "MissingRequiredAttributeError"
      ],
      "scoped_full_name": "attributes::SupportedValidators::Required::MissingRequiredAttributeError",
      "scoped_category": "error",
      "reference": "attributes::SupportedValidators::Required::MissingRequiredAttributeError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "attributes"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "missing_required_attribute",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "attribute_name": "symbol"
        }
      },
      "is_fatal": true,
      "error_class": "Foobara::BuiltinTypes::Attributes::SupportedValidators::Required::MissingRequiredAttributeError",
      "base_error": "Foobara::Value::DataError"
    },
    "duck::SupportedValidators::OneOf::ValueNotValidError": {
      "scoped_path": [
        "ValueNotValidError"
      ],
      "scoped_name": "ValueNotValidError",
      "scoped_short_name": "ValueNotValidError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "duck",
        "SupportedValidators",
        "OneOf",
        "ValueNotValidError"
      ],
      "scoped_full_name": "duck::SupportedValidators::OneOf::ValueNotValidError",
      "scoped_category": "error",
      "reference": "duck::SupportedValidators::OneOf::ValueNotValidError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "duck"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "value_not_valid",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "valid_values": {
            "type": "array",
            "element_type_declaration": "duck"
          }
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Duck::SupportedValidators::OneOf::ValueNotValidError",
      "base_error": "Foobara::Value::DataError"
    },
    "email::Validators::CannotExceed64Characters::CannotExceed64CharactersError": {
      "scoped_path": [
        "CannotExceed64CharactersError"
      ],
      "scoped_name": "CannotExceed64CharactersError",
      "scoped_short_name": "CannotExceed64CharactersError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "email",
        "Validators",
        "CannotExceed64Characters",
        "CannotExceed64CharactersError"
      ],
      "scoped_full_name": "email::Validators::CannotExceed64Characters::CannotExceed64CharactersError",
      "scoped_category": "error",
      "reference": "email::Validators::CannotExceed64Characters::CannotExceed64CharactersError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "email"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "cannot_exceed64_characters",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "regex": "duck",
          "negate_regex": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Email::Validators::CannotExceed64Characters::CannotExceed64CharactersError",
      "base_error": "Foobara::Value::DataError"
    },
    "email::Validators::CannotHaveMultipleAtSigns::CannotHaveMultipleAtSignsError": {
      "scoped_path": [
        "CannotHaveMultipleAtSignsError"
      ],
      "scoped_name": "CannotHaveMultipleAtSignsError",
      "scoped_short_name": "CannotHaveMultipleAtSignsError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "email",
        "Validators",
        "CannotHaveMultipleAtSigns",
        "CannotHaveMultipleAtSignsError"
      ],
      "scoped_full_name": "email::Validators::CannotHaveMultipleAtSigns::CannotHaveMultipleAtSignsError",
      "scoped_category": "error",
      "reference": "email::Validators::CannotHaveMultipleAtSigns::CannotHaveMultipleAtSignsError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "email"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "cannot_have_multiple_at_signs",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "regex": "duck",
          "negate_regex": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Email::Validators::CannotHaveMultipleAtSigns::CannotHaveMultipleAtSignsError",
      "base_error": "Foobara::Value::DataError"
    },
    "email::Validators::DomainCannotStartWithOrEndWithAHyphen::DomainCannotStartWithOrEndWithAHyphenError": {
      "scoped_path": [
        "DomainCannotStartWithOrEndWithAHyphenError"
      ],
      "scoped_name": "DomainCannotStartWithOrEndWithAHyphenError",
      "scoped_short_name": "DomainCannotStartWithOrEndWithAHyphenError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "email",
        "Validators",
        "DomainCannotStartWithOrEndWithAHyphen",
        "DomainCannotStartWithOrEndWithAHyphenError"
      ],
      "scoped_full_name": "email::Validators::DomainCannotStartWithOrEndWithAHyphen::DomainCannotStartWithOrEndWithAHyphenError",
      "scoped_category": "error",
      "reference": "email::Validators::DomainCannotStartWithOrEndWithAHyphen::DomainCannotStartWithOrEndWithAHyphenError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "email"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "domain_cannot_start_with_or_end_with_a_hyphen",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "regex": "duck",
          "negate_regex": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Email::Validators::DomainCannotStartWithOrEndWithAHyphen::DomainCannotStartWithOrEndWithAHyphenError",
      "base_error": "Foobara::Value::DataError"
    },
    "email::Validators::FirstPartCannotBeEmpty::FirstPartCannotBeEmptyError": {
      "scoped_path": [
        "FirstPartCannotBeEmptyError"
      ],
      "scoped_name": "FirstPartCannotBeEmptyError",
      "scoped_short_name": "FirstPartCannotBeEmptyError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "email",
        "Validators",
        "FirstPartCannotBeEmpty",
        "FirstPartCannotBeEmptyError"
      ],
      "scoped_full_name": "email::Validators::FirstPartCannotBeEmpty::FirstPartCannotBeEmptyError",
      "scoped_category": "error",
      "reference": "email::Validators::FirstPartCannotBeEmpty::FirstPartCannotBeEmptyError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "email"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "first_part_cannot_be_empty",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "regex": "duck",
          "negate_regex": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Email::Validators::FirstPartCannotBeEmpty::FirstPartCannotBeEmptyError",
      "base_error": "Foobara::Value::DataError"
    },
    "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARow::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError": {
      "scoped_path": [
        "FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError"
      ],
      "scoped_name": "FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
      "scoped_short_name": "FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "email",
        "Validators",
        "FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARow",
        "FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError"
      ],
      "scoped_full_name": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARow::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
      "scoped_category": "error",
      "reference": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARow::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "email"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "regex": "duck",
          "negate_regex": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARow::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
      "base_error": "Foobara::Value::DataError"
    },
    "email::Validators::FirstPartHasBadCharacters::FirstPartHasBadCharactersError": {
      "scoped_path": [
        "FirstPartHasBadCharactersError"
      ],
      "scoped_name": "FirstPartHasBadCharactersError",
      "scoped_short_name": "FirstPartHasBadCharactersError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "email",
        "Validators",
        "FirstPartHasBadCharacters",
        "FirstPartHasBadCharactersError"
      ],
      "scoped_full_name": "email::Validators::FirstPartHasBadCharacters::FirstPartHasBadCharactersError",
      "scoped_category": "error",
      "reference": "email::Validators::FirstPartHasBadCharacters::FirstPartHasBadCharactersError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "email"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "first_part_has_bad_characters",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "regex": "duck",
          "negate_regex": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Email::Validators::FirstPartHasBadCharacters::FirstPartHasBadCharactersError",
      "base_error": "Foobara::Value::DataError"
    },
    "email::Validators::MustHaveAnAtSign::MustHaveAnAtSignError": {
      "scoped_path": [
        "MustHaveAnAtSignError"
      ],
      "scoped_name": "MustHaveAnAtSignError",
      "scoped_short_name": "MustHaveAnAtSignError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "email",
        "Validators",
        "MustHaveAnAtSign",
        "MustHaveAnAtSignError"
      ],
      "scoped_full_name": "email::Validators::MustHaveAnAtSign::MustHaveAnAtSignError",
      "scoped_category": "error",
      "reference": "email::Validators::MustHaveAnAtSign::MustHaveAnAtSignError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "email"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "must_have_an_at_sign",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "regex": "duck",
          "negate_regex": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Email::Validators::MustHaveAnAtSign::MustHaveAnAtSignError",
      "base_error": "Foobara::Value::DataError"
    },
    "email::Validators::SecondPartCannotBeEmpty::SecondPartCannotBeEmptyError": {
      "scoped_path": [
        "SecondPartCannotBeEmptyError"
      ],
      "scoped_name": "SecondPartCannotBeEmptyError",
      "scoped_short_name": "SecondPartCannotBeEmptyError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "email",
        "Validators",
        "SecondPartCannotBeEmpty",
        "SecondPartCannotBeEmptyError"
      ],
      "scoped_full_name": "email::Validators::SecondPartCannotBeEmpty::SecondPartCannotBeEmptyError",
      "scoped_category": "error",
      "reference": "email::Validators::SecondPartCannotBeEmpty::SecondPartCannotBeEmptyError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "email"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "second_part_cannot_be_empty",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "regex": "duck",
          "negate_regex": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Email::Validators::SecondPartCannotBeEmpty::SecondPartCannotBeEmptyError",
      "base_error": "Foobara::Value::DataError"
    },
    "email::Validators::SecondPartHasBadCharacters::SecondPartHasBadCharactersError": {
      "scoped_path": [
        "SecondPartHasBadCharactersError"
      ],
      "scoped_name": "SecondPartHasBadCharactersError",
      "scoped_short_name": "SecondPartHasBadCharactersError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "email",
        "Validators",
        "SecondPartHasBadCharacters",
        "SecondPartHasBadCharactersError"
      ],
      "scoped_full_name": "email::Validators::SecondPartHasBadCharacters::SecondPartHasBadCharactersError",
      "scoped_category": "error",
      "reference": "email::Validators::SecondPartHasBadCharacters::SecondPartHasBadCharactersError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "email"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "second_part_has_bad_characters",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "regex": "duck",
          "negate_regex": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Email::Validators::SecondPartHasBadCharacters::SecondPartHasBadCharactersError",
      "base_error": "Foobara::Value::DataError"
    }
  },
  "organization": {
    "Foobara": {
      "scoped_path": [
        "Foobara"
      ],
      "scoped_name": "Foobara",
      "scoped_short_name": "Foobara",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara"
      ],
      "scoped_full_name": "Foobara",
      "scoped_category": "organization",
      "reference": "Foobara",
      "domain": "global_organization::global_domain",
      "organization": "Foobara",
      "domains": [
        "Foobara::Auth"
      ]
    },
    "global_organization": {
      "scoped_path": [],
      "scoped_name": null,
      "scoped_short_name": null,
      "scoped_prefix": [],
      "scoped_full_path": [],
      "scoped_full_name": "",
      "scoped_category": "organization",
      "reference": "global_organization",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "domains": [
        "global_organization::global_domain"
      ]
    }
  },
  "type": {
    "Foobara::Auth::Types::Role": {
      "scoped_path": [
        "Types",
        "Role"
      ],
      "scoped_name": "Types::Role",
      "scoped_short_name": "Role",
      "scoped_prefix": [
        "Types"
      ],
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "Types",
        "Role"
      ],
      "scoped_full_name": "Foobara::Auth::Types::Role",
      "scoped_category": "type",
      "reference": "Foobara::Auth::Types::Role",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "declaration_data": {
        "type": "entity",
        "name": "Types::Role",
        "model_module": "Foobara::Auth",
        "model_class": "Foobara::Auth::Types::Role",
        "model_base_class": "Foobara::Entity",
        "attributes_declaration": {
          "type": "attributes",
          "element_type_declarations": {
            "id": "integer",
            "symbol": "symbol"
          },
          "required": [
            "symbol"
          ]
        },
        "primary_key": "id"
      },
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "Types::Role",
      "target_classes": [
        "Foobara::Auth::Types::Role"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "entity",
        "integer",
        "symbol"
      ],
      "description": null,
      "base_type": "entity",
      "attributes_type": {
        "type": "attributes",
        "element_type_declarations": {
          "id": "integer",
          "symbol": "symbol"
        },
        "required": [
          "symbol"
        ]
      },
      "organization_name": "Foobara",
      "domain_name": "Auth",
      "model_name": "Types::Role",
      "model_base_class": "Foobara::Entity",
      "model_class": "Foobara::Auth::Types::Role",
      "entity_name": "Types::Role",
      "primary_key_attribute": "id",
      "primary_key_type": "integer"
    },
    "Foobara::Auth::Types::User": {
      "scoped_path": [
        "Types",
        "User"
      ],
      "scoped_name": "Types::User",
      "scoped_short_name": "User",
      "scoped_prefix": [
        "Types"
      ],
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "Types",
        "User"
      ],
      "scoped_full_name": "Foobara::Auth::Types::User",
      "scoped_category": "type",
      "reference": "Foobara::Auth::Types::User",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "declaration_data": {
        "type": "entity",
        "name": "Types::User",
        "model_module": "Foobara::Auth",
        "model_class": "Foobara::Auth::Types::User",
        "model_base_class": "Foobara::Entity",
        "attributes_declaration": {
          "type": "attributes",
          "element_type_declarations": {
            "id": "integer",
            "username": "string",
            "email": {
              "allow_nil": true,
              "type": "email"
            },
            "roles": {
              "type": "array",
              "element_type_declaration": "Foobara::Auth::Types::Role"
            }
          },
          "required": [
            "username"
          ],
          "defaults": {
            "roles": []
          }
        },
        "primary_key": "id"
      },
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "Types::User",
      "target_classes": [
        null
      ],
      "types_depended_on": [
        "Foobara::Auth::Types::Role",
        "array",
        "attributes",
        "duck",
        "email",
        "entity",
        "integer",
        "string",
        "symbol"
      ],
      "description": null,
      "base_type": "entity",
      "attributes_type": {
        "type": "attributes",
        "element_type_declarations": {
          "id": "integer",
          "username": "string",
          "email": {
            "allow_nil": true,
            "type": "email"
          },
          "roles": {
            "type": "array",
            "element_type_declaration": "Foobara::Auth::Types::Role"
          }
        },
        "required": [
          "username"
        ],
        "defaults": {
          "roles": []
        }
      },
      "organization_name": "Foobara",
      "domain_name": "Auth",
      "model_name": "Types::User",
      "model_base_class": "Foobara::Entity",
      "model_class": "Foobara::Auth::Types::User",
      "depends_on": [
        "Foobara::Auth::Types::Role"
      ],
      "deep_depends_on": [
        "Foobara::Auth::Types::Role"
      ],
      "associations": {
        "roles.#": "Foobara::Auth::Types::Role"
      },
      "deep_associations": {
        "roles.#": "Foobara::Auth::Types::Role"
      },
      "entity_name": "Types::User",
      "primary_key_attribute": "id",
      "primary_key_type": "integer"
    },
    "Foobara::Auth::token_state": {
      "scoped_path": [
        "token_state"
      ],
      "scoped_name": "token_state",
      "scoped_short_name": "token_state",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Auth",
        "token_state"
      ],
      "scoped_full_name": "Foobara::Auth::token_state",
      "scoped_category": "type",
      "reference": "Foobara::Auth::token_state",
      "domain": "Foobara::Auth",
      "organization": "Foobara",
      "parent": [
        "domain",
        "Foobara::Auth"
      ],
      "declaration_data": {
        "one_of": [
          "active",
          "expired",
          "inactive",
          "needs_approval",
          "rejected",
          "revoked"
        ],
        "type": "symbol"
      },
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.value_not_valid": {
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        }
      },
      "name": "Anonymous symbol extension",
      "target_classes": [
        "Symbol"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "description": null,
      "base_type": "symbol"
    },
    "Types::User": {
      "scoped_path": [
        "Types",
        "User"
      ],
      "scoped_name": "Types::User",
      "scoped_short_name": "User",
      "scoped_prefix": [
        "Types"
      ],
      "scoped_full_path": [
        "Types",
        "User"
      ],
      "scoped_full_name": "Types::User",
      "scoped_category": "type",
      "reference": "Types::User",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "declaration_data": {
        "type": "entity",
        "name": "Types::User",
        "model_module": "Foobara::Auth",
        "model_class": "Foobara::Auth::Types::User",
        "model_base_class": "Foobara::Entity",
        "attributes_declaration": {
          "type": "attributes",
          "element_type_declarations": {
            "id": "integer",
            "username": "string",
            "email": {
              "allow_nil": true,
              "type": "email"
            },
            "roles": {
              "type": "array",
              "element_type_declaration": "Foobara::Auth::Types::Role"
            }
          },
          "required": [
            "username"
          ],
          "defaults": {
            "roles": []
          }
        },
        "primary_key": "id"
      },
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "Types::User",
      "target_classes": [
        null
      ],
      "types_depended_on": [
        "Foobara::Auth::Types::Role",
        "array",
        "attributes",
        "duck",
        "email",
        "entity",
        "integer",
        "string",
        "symbol"
      ],
      "description": null,
      "base_type": "entity",
      "attributes_type": {
        "type": "attributes",
        "element_type_declarations": {
          "id": "integer",
          "username": "string",
          "email": {
            "allow_nil": true,
            "type": "email"
          },
          "roles": {
            "type": "array",
            "element_type_declaration": "Foobara::Auth::Types::Role"
          }
        },
        "required": [
          "username"
        ],
        "defaults": {
          "roles": []
        }
      },
      "organization_name": "global_organization",
      "domain_name": "global_domain",
      "model_name": "Types::User",
      "model_base_class": "Foobara::Entity",
      "model_class": "Foobara::Auth::Types::User",
      "depends_on": [
        "Foobara::Auth::Types::Role"
      ],
      "deep_depends_on": [
        "Foobara::Auth::Types::Role"
      ],
      "associations": {
        "roles.#": "Foobara::Auth::Types::Role"
      },
      "deep_associations": {
        "roles.#": "Foobara::Auth::Types::Role"
      },
      "entity_name": "Types::User",
      "primary_key_attribute": "id",
      "primary_key_type": "integer"
    },
    "array": {
      "scoped_path": [
        "array"
      ],
      "scoped_name": "array",
      "scoped_short_name": "array",
      "scoped_prefix": [],
      "scoped_full_path": [
        "array"
      ],
      "scoped_full_name": "array",
      "scoped_category": "type",
      "reference": "array",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "array",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "array",
      "target_classes": [
        "Array"
      ],
      "types_depended_on": [
        "attributes",
        "duck",
        "duckture",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in array type",
      "base_type": "duckture"
    },
    "associative_array": {
      "scoped_path": [
        "associative_array"
      ],
      "scoped_name": "associative_array",
      "scoped_short_name": "associative_array",
      "scoped_prefix": [],
      "scoped_full_path": [
        "associative_array"
      ],
      "scoped_full_name": "associative_array",
      "scoped_category": "type",
      "reference": "associative_array",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "associative_array",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "associative_array",
      "target_classes": [
        "Hash"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "duckture",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in associative_array type",
      "base_type": "duckture"
    },
    "atomic_duck": {
      "scoped_path": [
        "atomic_duck"
      ],
      "scoped_name": "atomic_duck",
      "scoped_short_name": "atomic_duck",
      "scoped_prefix": [],
      "scoped_full_path": [
        "atomic_duck"
      ],
      "scoped_full_name": "atomic_duck",
      "scoped_category": "type",
      "reference": "atomic_duck",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "atomic_duck",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "atomic_duck",
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in atomic_duck type",
      "base_type": "duck"
    },
    "attributes": {
      "scoped_path": [
        "attributes"
      ],
      "scoped_name": "attributes",
      "scoped_short_name": "attributes",
      "scoped_prefix": [],
      "scoped_full_path": [
        "attributes"
      ],
      "scoped_full_name": "attributes",
      "scoped_category": "type",
      "reference": "attributes",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "attributes",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "attributes",
      "types_depended_on": [
        "array",
        "associative_array",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in attributes type",
      "base_type": "associative_array"
    },
    "detached_entity": {
      "scoped_path": [
        "detached_entity"
      ],
      "scoped_name": "detached_entity",
      "scoped_short_name": "detached_entity",
      "scoped_prefix": [],
      "scoped_full_path": [
        "detached_entity"
      ],
      "scoped_full_name": "detached_entity",
      "scoped_category": "type",
      "reference": "detached_entity",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "detached_entity",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "detached_entity",
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "model",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in detached_entity type",
      "base_type": "model"
    },
    "duck": {
      "scoped_path": [
        "duck"
      ],
      "scoped_name": "duck",
      "scoped_short_name": "duck",
      "scoped_prefix": [],
      "scoped_full_path": [
        "duck"
      ],
      "scoped_full_name": "duck",
      "scoped_category": "type",
      "reference": "duck",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "duck",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "duck",
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in duck type",
      "base_type": null
    },
    "duckture": {
      "scoped_path": [
        "duckture"
      ],
      "scoped_name": "duckture",
      "scoped_short_name": "duckture",
      "scoped_prefix": [],
      "scoped_full_path": [
        "duckture"
      ],
      "scoped_full_name": "duckture",
      "scoped_category": "type",
      "reference": "duckture",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "duckture",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "duckture",
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in duckture type",
      "base_type": "duck"
    },
    "email": {
      "scoped_path": [
        "email"
      ],
      "scoped_name": "email",
      "scoped_short_name": "email",
      "scoped_prefix": [],
      "scoped_full_path": [
        "email"
      ],
      "scoped_full_name": "email",
      "scoped_category": "type",
      "reference": "email",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "email",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.cannot_exceed64_characters": {
          "category": "data",
          "symbol": "cannot_exceed64_characters",
          "key": "data.cannot_exceed64_characters",
          "error": "email::Validators::CannotExceed64Characters::CannotExceed64CharactersError"
        },
        "data.cannot_have_multiple_at_signs": {
          "category": "data",
          "symbol": "cannot_have_multiple_at_signs",
          "key": "data.cannot_have_multiple_at_signs",
          "error": "email::Validators::CannotHaveMultipleAtSigns::CannotHaveMultipleAtSignsError"
        },
        "data.domain_cannot_start_with_or_end_with_a_hyphen": {
          "category": "data",
          "symbol": "domain_cannot_start_with_or_end_with_a_hyphen",
          "key": "data.domain_cannot_start_with_or_end_with_a_hyphen",
          "error": "email::Validators::DomainCannotStartWithOrEndWithAHyphen::DomainCannotStartWithOrEndWithAHyphenError"
        },
        "data.first_part_cannot_be_empty": {
          "category": "data",
          "symbol": "first_part_cannot_be_empty",
          "key": "data.first_part_cannot_be_empty",
          "error": "email::Validators::FirstPartCannotBeEmpty::FirstPartCannotBeEmptyError"
        },
        "data.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row": {
          "category": "data",
          "symbol": "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
          "key": "data.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
          "error": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARow::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError"
        },
        "data.first_part_has_bad_characters": {
          "category": "data",
          "symbol": "first_part_has_bad_characters",
          "key": "data.first_part_has_bad_characters",
          "error": "email::Validators::FirstPartHasBadCharacters::FirstPartHasBadCharactersError"
        },
        "data.must_have_an_at_sign": {
          "category": "data",
          "symbol": "must_have_an_at_sign",
          "key": "data.must_have_an_at_sign",
          "error": "email::Validators::MustHaveAnAtSign::MustHaveAnAtSignError"
        },
        "data.second_part_cannot_be_empty": {
          "category": "data",
          "symbol": "second_part_cannot_be_empty",
          "key": "data.second_part_cannot_be_empty",
          "error": "email::Validators::SecondPartCannotBeEmpty::SecondPartCannotBeEmptyError"
        },
        "data.second_part_has_bad_characters": {
          "category": "data",
          "symbol": "second_part_has_bad_characters",
          "key": "data.second_part_has_bad_characters",
          "error": "email::Validators::SecondPartHasBadCharacters::SecondPartHasBadCharactersError"
        }
      },
      "name": "email",
      "target_classes": [
        "String"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "string",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in email type",
      "base_type": "string"
    },
    "entity": {
      "scoped_path": [
        "entity"
      ],
      "scoped_name": "entity",
      "scoped_short_name": "entity",
      "scoped_prefix": [],
      "scoped_full_path": [
        "entity"
      ],
      "scoped_full_name": "entity",
      "scoped_category": "type",
      "reference": "entity",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "entity",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "entity",
      "types_depended_on": [
        "array",
        "attributes",
        "detached_entity",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in entity type",
      "base_type": "detached_entity"
    },
    "integer": {
      "scoped_path": [
        "integer"
      ],
      "scoped_name": "integer",
      "scoped_short_name": "integer",
      "scoped_prefix": [],
      "scoped_full_path": [
        "integer"
      ],
      "scoped_full_name": "integer",
      "scoped_category": "type",
      "reference": "integer",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "integer",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "integer",
      "target_classes": [
        "Integer"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "number",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in integer type",
      "base_type": "number"
    },
    "model": {
      "scoped_path": [
        "model"
      ],
      "scoped_name": "model",
      "scoped_short_name": "model",
      "scoped_prefix": [],
      "scoped_full_path": [
        "model"
      ],
      "scoped_full_name": "model",
      "scoped_category": "type",
      "reference": "model",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "model",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "model",
      "types_depended_on": [
        "array",
        "atomic_duck",
        "attributes",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in model type",
      "base_type": "atomic_duck"
    },
    "number": {
      "scoped_path": [
        "number"
      ],
      "scoped_name": "number",
      "scoped_short_name": "number",
      "scoped_prefix": [],
      "scoped_full_path": [
        "number"
      ],
      "scoped_full_name": "number",
      "scoped_category": "type",
      "reference": "number",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "number",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "number",
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "array",
        "atomic_duck",
        "attributes",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in number type",
      "base_type": "atomic_duck"
    },
    "string": {
      "scoped_path": [
        "string"
      ],
      "scoped_name": "string",
      "scoped_short_name": "string",
      "scoped_prefix": [],
      "scoped_full_path": [
        "string"
      ],
      "scoped_full_name": "string",
      "scoped_category": "type",
      "reference": "string",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "string",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "string",
      "target_classes": [
        "String"
      ],
      "types_depended_on": [
        "array",
        "atomic_duck",
        "attributes",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in string type",
      "base_type": "atomic_duck"
    },
    "symbol": {
      "scoped_path": [
        "symbol"
      ],
      "scoped_name": "symbol",
      "scoped_short_name": "symbol",
      "scoped_prefix": [],
      "scoped_full_path": [
        "symbol"
      ],
      "scoped_full_name": "symbol",
      "scoped_category": "type",
      "reference": "symbol",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "symbol",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "symbol",
      "target_classes": [
        "Symbol"
      ],
      "types_depended_on": [
        "array",
        "atomic_duck",
        "attributes",
        "duck"
      ],
      "builtin": true,
      "description": "Built-in symbol type",
      "base_type": "atomic_duck"
    }
  },
  "metadata": {
    "when": "2025-08-25 17:39:04 -0700",
    "url": "http://localhost:3000/manifest"
  }
}
