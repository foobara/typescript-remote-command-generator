{
  "command": {
    "GlobalCommand": {
      "authenticator": null,
      "capture_unknown_error": null,
      "command": "GlobalCommand",
      "depends_on": [
      ],
      "domain": "global_organization::global_domain",
      "domain_name": "global_organization::global_domain",
      "error_types": {
        "data.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.cannot_cast",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.missing_required_attribute": {
          "category": "data",
          "error": "attributes::required::MissingRequiredAttributeError",
          "key": "data.missing_required_attribute",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "missing_required_attribute"
        },
        "data.some_integer.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.some_integer.cannot_cast",
          "path": [
            "some_integer"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.some_integer.missing_required_attribute": {
          "category": "data",
          "error": "attributes::required::MissingRequiredAttributeError",
          "key": "data.some_integer.missing_required_attribute",
          "path": [
            "some_integer"
          ],
          "runtime_path": [
          ],
          "symbol": "missing_required_attribute"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "error": "attributes::element_type_declarations::UnexpectedAttributesError",
          "key": "data.unexpected_attributes",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "unexpected_attributes"
        }
      },
      "errors_transformers": [
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Transformers::AuthErrorsTransformer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Transformers::AuthErrorsTransformer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Transformers::AuthErrorsTransformer",
          "scoped_full_path": [
            "CommandConnectors",
            "Transformers",
            "AuthErrorsTransformer"
          ],
          "scoped_name": "Transformers::AuthErrorsTransformer",
          "scoped_path": [
            "Transformers",
            "AuthErrorsTransformer"
          ],
          "scoped_prefix": [
            "Transformers"
          ],
          "scoped_short_name": "AuthErrorsTransformer"
        }
      ],
      "errors_types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck"
      ],
      "full_command_name": "GlobalCommand",
      "inputs_transformers": [
      ],
      "inputs_type": {
        "element_type_declarations": {
          "some_integer": {
            "type": "integer"
          }
        },
        "required": [
          "some_integer"
        ],
        "type": "attributes"
      },
      "inputs_types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer"
      ],
      "organization": "global_organization",
      "organization_name": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "pre_commit_transformers": [
      ],
      "reference": "GlobalCommand",
      "requires_authentication": null,
      "result_transformers": [
      ],
      "result_type": {
        "type": "integer"
      },
      "result_types_depended_on": [
        "integer"
      ],
      "scoped_category": "command",
      "scoped_full_name": "GlobalCommand",
      "scoped_full_path": [
        "GlobalCommand"
      ],
      "scoped_name": "GlobalCommand",
      "scoped_path": [
        "GlobalCommand"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "GlobalCommand",
      "serializers": [
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Serializers::ErrorsSerializer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Serializers::ErrorsSerializer",
          "scoped_full_path": [
            "CommandConnectors",
            "Serializers",
            "ErrorsSerializer"
          ],
          "scoped_name": "Serializers::ErrorsSerializer",
          "scoped_path": [
            "Serializers",
            "ErrorsSerializer"
          ],
          "scoped_prefix": [
            "Serializers"
          ],
          "scoped_short_name": "ErrorsSerializer"
        },
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Serializers::JsonSerializer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Serializers::JsonSerializer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Serializers::JsonSerializer",
          "scoped_full_path": [
            "CommandConnectors",
            "Serializers",
            "JsonSerializer"
          ],
          "scoped_name": "Serializers::JsonSerializer",
          "scoped_path": [
            "Serializers",
            "JsonSerializer"
          ],
          "scoped_prefix": [
            "Serializers"
          ],
          "scoped_short_name": "JsonSerializer"
        }
      ],
      "types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer"
      ]
    },
    "SomeDomainWithoutOrg::CommandWithDomainButNoOrg": {
      "authenticator": null,
      "capture_unknown_error": null,
      "command": "SomeDomainWithoutOrg::CommandWithDomainButNoOrg",
      "depends_on": [
      ],
      "domain": "SomeDomainWithoutOrg",
      "domain_name": "SomeDomainWithoutOrg",
      "error_types": {
        "data.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.cannot_cast",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.missing_required_attribute": {
          "category": "data",
          "error": "attributes::required::MissingRequiredAttributeError",
          "key": "data.missing_required_attribute",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "missing_required_attribute"
        },
        "data.some_integer.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.some_integer.cannot_cast",
          "path": [
            "some_integer"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.some_integer.missing_required_attribute": {
          "category": "data",
          "error": "attributes::required::MissingRequiredAttributeError",
          "key": "data.some_integer.missing_required_attribute",
          "path": [
            "some_integer"
          ],
          "runtime_path": [
          ],
          "symbol": "missing_required_attribute"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "error": "attributes::element_type_declarations::UnexpectedAttributesError",
          "key": "data.unexpected_attributes",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "unexpected_attributes"
        }
      },
      "errors_transformers": [
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Transformers::AuthErrorsTransformer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Transformers::AuthErrorsTransformer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Transformers::AuthErrorsTransformer",
          "scoped_full_path": [
            "CommandConnectors",
            "Transformers",
            "AuthErrorsTransformer"
          ],
          "scoped_name": "Transformers::AuthErrorsTransformer",
          "scoped_path": [
            "Transformers",
            "AuthErrorsTransformer"
          ],
          "scoped_prefix": [
            "Transformers"
          ],
          "scoped_short_name": "AuthErrorsTransformer"
        }
      ],
      "errors_types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck"
      ],
      "full_command_name": "SomeDomainWithoutOrg::CommandWithDomainButNoOrg",
      "inputs_transformers": [
      ],
      "inputs_type": {
        "element_type_declarations": {
          "some_integer": {
            "type": "integer"
          }
        },
        "required": [
          "some_integer"
        ],
        "type": "attributes"
      },
      "inputs_types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer"
      ],
      "organization": "global_organization",
      "organization_name": "global_organization",
      "parent": [
        "domain",
        "SomeDomainWithoutOrg"
      ],
      "pre_commit_transformers": [
      ],
      "reference": "SomeDomainWithoutOrg::CommandWithDomainButNoOrg",
      "requires_authentication": null,
      "result_transformers": [
      ],
      "result_type": {
        "type": "integer"
      },
      "result_types_depended_on": [
        "integer"
      ],
      "scoped_category": "command",
      "scoped_full_name": "SomeDomainWithoutOrg::CommandWithDomainButNoOrg",
      "scoped_full_path": [
        "SomeDomainWithoutOrg",
        "CommandWithDomainButNoOrg"
      ],
      "scoped_name": "CommandWithDomainButNoOrg",
      "scoped_path": [
        "CommandWithDomainButNoOrg"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "CommandWithDomainButNoOrg",
      "serializers": [
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Serializers::ErrorsSerializer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Serializers::ErrorsSerializer",
          "scoped_full_path": [
            "CommandConnectors",
            "Serializers",
            "ErrorsSerializer"
          ],
          "scoped_name": "Serializers::ErrorsSerializer",
          "scoped_path": [
            "Serializers",
            "ErrorsSerializer"
          ],
          "scoped_prefix": [
            "Serializers"
          ],
          "scoped_short_name": "ErrorsSerializer"
        },
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Serializers::JsonSerializer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Serializers::JsonSerializer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Serializers::JsonSerializer",
          "scoped_full_path": [
            "CommandConnectors",
            "Serializers",
            "JsonSerializer"
          ],
          "scoped_name": "Serializers::JsonSerializer",
          "scoped_path": [
            "Serializers",
            "JsonSerializer"
          ],
          "scoped_prefix": [
            "Serializers"
          ],
          "scoped_short_name": "JsonSerializer"
        }
      ],
      "types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer"
      ]
    },
    "SomeOrg::Auth::CreateReferral": {
      "authenticator": null,
      "capture_unknown_error": null,
      "command": "SomeOrg::Auth::CreateReferral",
      "depends_on": [
      ],
      "domain": "SomeOrg::Auth",
      "domain_name": "SomeOrg::Auth",
      "error_types": {
        "data.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.cannot_cast",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.channel.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.channel.cannot_cast",
          "path": [
            "channel"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.id.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.id.cannot_cast",
          "path": [
            "id"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referred_user.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referred_user.cannot_cast",
          "path": [
            "referred_user"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referred_user.email.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referred_user.email.cannot_cast",
          "path": [
            "referred_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referred_user.email.cannot_exceed64_characters": {
          "category": "data",
          "error": "email::Validators::CannotExceed64CharactersError",
          "key": "data.referred_user.email.cannot_exceed64_characters",
          "path": [
            "referred_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_exceed64_characters"
        },
        "data.referred_user.email.cannot_have_multiple_at_signs": {
          "category": "data",
          "error": "email::Validators::CannotHaveMultipleAtSignsError",
          "key": "data.referred_user.email.cannot_have_multiple_at_signs",
          "path": [
            "referred_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_have_multiple_at_signs"
        },
        "data.referred_user.email.domain_cannot_start_with_or_end_with_a_hyphen": {
          "category": "data",
          "error": "email::Validators::DomainCannotStartWithOrEndWithAHyphenError",
          "key": "data.referred_user.email.domain_cannot_start_with_or_end_with_a_hyphen",
          "path": [
            "referred_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "domain_cannot_start_with_or_end_with_a_hyphen"
        },
        "data.referred_user.email.first_part_cannot_be_empty": {
          "category": "data",
          "error": "email::Validators::FirstPartCannotBeEmptyError",
          "key": "data.referred_user.email.first_part_cannot_be_empty",
          "path": [
            "referred_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_cannot_be_empty"
        },
        "data.referred_user.email.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row": {
          "category": "data",
          "error": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
          "key": "data.referred_user.email.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
          "path": [
            "referred_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row"
        },
        "data.referred_user.email.first_part_has_bad_characters": {
          "category": "data",
          "error": "email::Validators::FirstPartHasBadCharactersError",
          "key": "data.referred_user.email.first_part_has_bad_characters",
          "path": [
            "referred_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_has_bad_characters"
        },
        "data.referred_user.email.must_have_an_at_sign": {
          "category": "data",
          "error": "email::Validators::MustHaveAnAtSignError",
          "key": "data.referred_user.email.must_have_an_at_sign",
          "path": [
            "referred_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "must_have_an_at_sign"
        },
        "data.referred_user.email.second_part_cannot_be_empty": {
          "category": "data",
          "error": "email::Validators::SecondPartCannotBeEmptyError",
          "key": "data.referred_user.email.second_part_cannot_be_empty",
          "path": [
            "referred_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "second_part_cannot_be_empty"
        },
        "data.referred_user.email.second_part_has_bad_characters": {
          "category": "data",
          "error": "email::Validators::SecondPartHasBadCharactersError",
          "key": "data.referred_user.email.second_part_has_bad_characters",
          "path": [
            "referred_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "second_part_has_bad_characters"
        },
        "data.referred_user.first_name.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referred_user.first_name.cannot_cast",
          "path": [
            "referred_user",
            "first_name"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referred_user.id.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referred_user.id.cannot_cast",
          "path": [
            "referred_user",
            "id"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referred_user.last_name.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referred_user.last_name.cannot_cast",
          "path": [
            "referred_user",
            "last_name"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referred_user.unexpected_attributes": {
          "category": "data",
          "error": "attributes::element_type_declarations::UnexpectedAttributesError",
          "key": "data.referred_user.unexpected_attributes",
          "path": [
            "referred_user"
          ],
          "runtime_path": [
          ],
          "symbol": "unexpected_attributes"
        },
        "data.referring_user.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referring_user.cannot_cast",
          "path": [
            "referring_user"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.email.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referring_user.email.cannot_cast",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.email.cannot_exceed64_characters": {
          "category": "data",
          "error": "email::Validators::CannotExceed64CharactersError",
          "key": "data.referring_user.email.cannot_exceed64_characters",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_exceed64_characters"
        },
        "data.referring_user.email.cannot_have_multiple_at_signs": {
          "category": "data",
          "error": "email::Validators::CannotHaveMultipleAtSignsError",
          "key": "data.referring_user.email.cannot_have_multiple_at_signs",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_have_multiple_at_signs"
        },
        "data.referring_user.email.domain_cannot_start_with_or_end_with_a_hyphen": {
          "category": "data",
          "error": "email::Validators::DomainCannotStartWithOrEndWithAHyphenError",
          "key": "data.referring_user.email.domain_cannot_start_with_or_end_with_a_hyphen",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "domain_cannot_start_with_or_end_with_a_hyphen"
        },
        "data.referring_user.email.first_part_cannot_be_empty": {
          "category": "data",
          "error": "email::Validators::FirstPartCannotBeEmptyError",
          "key": "data.referring_user.email.first_part_cannot_be_empty",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_cannot_be_empty"
        },
        "data.referring_user.email.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row": {
          "category": "data",
          "error": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
          "key": "data.referring_user.email.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row"
        },
        "data.referring_user.email.first_part_has_bad_characters": {
          "category": "data",
          "error": "email::Validators::FirstPartHasBadCharactersError",
          "key": "data.referring_user.email.first_part_has_bad_characters",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_has_bad_characters"
        },
        "data.referring_user.email.must_have_an_at_sign": {
          "category": "data",
          "error": "email::Validators::MustHaveAnAtSignError",
          "key": "data.referring_user.email.must_have_an_at_sign",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "must_have_an_at_sign"
        },
        "data.referring_user.email.second_part_cannot_be_empty": {
          "category": "data",
          "error": "email::Validators::SecondPartCannotBeEmptyError",
          "key": "data.referring_user.email.second_part_cannot_be_empty",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "second_part_cannot_be_empty"
        },
        "data.referring_user.email.second_part_has_bad_characters": {
          "category": "data",
          "error": "email::Validators::SecondPartHasBadCharactersError",
          "key": "data.referring_user.email.second_part_has_bad_characters",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "second_part_has_bad_characters"
        },
        "data.referring_user.first_name.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referring_user.first_name.cannot_cast",
          "path": [
            "referring_user",
            "first_name"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.id.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referring_user.id.cannot_cast",
          "path": [
            "referring_user",
            "id"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.last_name.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referring_user.last_name.cannot_cast",
          "path": [
            "referring_user",
            "last_name"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.unexpected_attributes": {
          "category": "data",
          "error": "attributes::element_type_declarations::UnexpectedAttributesError",
          "key": "data.referring_user.unexpected_attributes",
          "path": [
            "referring_user"
          ],
          "runtime_path": [
          ],
          "symbol": "unexpected_attributes"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "error": "attributes::element_type_declarations::UnexpectedAttributesError",
          "key": "data.unexpected_attributes",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "unexpected_attributes"
        }
      },
      "errors_transformers": [
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Transformers::AuthErrorsTransformer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Transformers::AuthErrorsTransformer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Transformers::AuthErrorsTransformer",
          "scoped_full_path": [
            "CommandConnectors",
            "Transformers",
            "AuthErrorsTransformer"
          ],
          "scoped_name": "Transformers::AuthErrorsTransformer",
          "scoped_path": [
            "Transformers",
            "AuthErrorsTransformer"
          ],
          "scoped_prefix": [
            "Transformers"
          ],
          "scoped_short_name": "AuthErrorsTransformer"
        }
      ],
      "errors_types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck"
      ],
      "full_command_name": "SomeOrg::Auth::CreateReferral",
      "inputs_transformers": [
      ],
      "inputs_type": {
        "element_type_declarations": {
          "channel": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "referred_user": {
            "type": "SomeOrg::Auth::User"
          },
          "referring_user": {
            "type": "SomeOrg::Auth::User"
          }
        },
        "type": "attributes"
      },
      "inputs_types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer",
        "string",
        "SomeOrg::Auth::User"
      ],
      "organization": "SomeOrg",
      "organization_name": "SomeOrg",
      "parent": [
        "domain",
        "SomeOrg::Auth"
      ],
      "pre_commit_transformers": [
      ],
      "reference": "SomeOrg::Auth::CreateReferral",
      "requires_authentication": null,
      "result_transformers": [
      ],
      "result_type": {
        "type": "SomeOrg::Auth::Referral"
      },
      "result_types_depended_on": [
        "SomeOrg::Auth::Referral"
      ],
      "scoped_category": "command",
      "scoped_full_name": "SomeOrg::Auth::CreateReferral",
      "scoped_full_path": [
        "SomeOrg",
        "Auth",
        "CreateReferral"
      ],
      "scoped_name": "CreateReferral",
      "scoped_path": [
        "CreateReferral"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "CreateReferral",
      "serializers": [
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Serializers::ErrorsSerializer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Serializers::ErrorsSerializer",
          "scoped_full_path": [
            "CommandConnectors",
            "Serializers",
            "ErrorsSerializer"
          ],
          "scoped_name": "Serializers::ErrorsSerializer",
          "scoped_path": [
            "Serializers",
            "ErrorsSerializer"
          ],
          "scoped_prefix": [
            "Serializers"
          ],
          "scoped_short_name": "ErrorsSerializer"
        },
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Serializers::JsonSerializer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Serializers::JsonSerializer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Serializers::JsonSerializer",
          "scoped_full_path": [
            "CommandConnectors",
            "Serializers",
            "JsonSerializer"
          ],
          "scoped_name": "Serializers::JsonSerializer",
          "scoped_path": [
            "Serializers",
            "JsonSerializer"
          ],
          "scoped_prefix": [
            "Serializers"
          ],
          "scoped_short_name": "JsonSerializer"
        }
      ],
      "types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer",
        "string",
        "SomeOrg::Auth::User",
        "SomeOrg::Auth::Referral"
      ]
    },
    "SomeOrg::Auth::CreateUser": {
      "authenticator": null,
      "capture_unknown_error": null,
      "command": "SomeOrg::Auth::CreateUser",
      "depends_on": [
        "SomeOrg::Auth::CreateReferral"
      ],
      "domain": "SomeOrg::Auth",
      "domain_name": "SomeOrg::Auth",
      "error_types": {
        "data.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.cannot_cast",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.email.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.email.cannot_cast",
          "path": [
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.email.cannot_exceed64_characters": {
          "category": "data",
          "error": "email::Validators::CannotExceed64CharactersError",
          "key": "data.email.cannot_exceed64_characters",
          "path": [
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_exceed64_characters"
        },
        "data.email.cannot_have_multiple_at_signs": {
          "category": "data",
          "error": "email::Validators::CannotHaveMultipleAtSignsError",
          "key": "data.email.cannot_have_multiple_at_signs",
          "path": [
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_have_multiple_at_signs"
        },
        "data.email.domain_cannot_start_with_or_end_with_a_hyphen": {
          "category": "data",
          "error": "email::Validators::DomainCannotStartWithOrEndWithAHyphenError",
          "key": "data.email.domain_cannot_start_with_or_end_with_a_hyphen",
          "path": [
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "domain_cannot_start_with_or_end_with_a_hyphen"
        },
        "data.email.first_part_cannot_be_empty": {
          "category": "data",
          "error": "email::Validators::FirstPartCannotBeEmptyError",
          "key": "data.email.first_part_cannot_be_empty",
          "path": [
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_cannot_be_empty"
        },
        "data.email.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row": {
          "category": "data",
          "error": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
          "key": "data.email.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
          "path": [
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row"
        },
        "data.email.first_part_has_bad_characters": {
          "category": "data",
          "error": "email::Validators::FirstPartHasBadCharactersError",
          "key": "data.email.first_part_has_bad_characters",
          "path": [
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_has_bad_characters"
        },
        "data.email.must_have_an_at_sign": {
          "category": "data",
          "error": "email::Validators::MustHaveAnAtSignError",
          "key": "data.email.must_have_an_at_sign",
          "path": [
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "must_have_an_at_sign"
        },
        "data.email.second_part_cannot_be_empty": {
          "category": "data",
          "error": "email::Validators::SecondPartCannotBeEmptyError",
          "key": "data.email.second_part_cannot_be_empty",
          "path": [
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "second_part_cannot_be_empty"
        },
        "data.email.second_part_has_bad_characters": {
          "category": "data",
          "error": "email::Validators::SecondPartHasBadCharactersError",
          "key": "data.email.second_part_has_bad_characters",
          "path": [
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "second_part_has_bad_characters"
        },
        "data.first_name.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.first_name.cannot_cast",
          "path": [
            "first_name"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.id.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.id.cannot_cast",
          "path": [
            "id"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.last_name.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.last_name.cannot_cast",
          "path": [
            "last_name"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referring_user.cannot_cast",
          "path": [
            "referring_user"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.email.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referring_user.email.cannot_cast",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.email.cannot_exceed64_characters": {
          "category": "data",
          "error": "email::Validators::CannotExceed64CharactersError",
          "key": "data.referring_user.email.cannot_exceed64_characters",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_exceed64_characters"
        },
        "data.referring_user.email.cannot_have_multiple_at_signs": {
          "category": "data",
          "error": "email::Validators::CannotHaveMultipleAtSignsError",
          "key": "data.referring_user.email.cannot_have_multiple_at_signs",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_have_multiple_at_signs"
        },
        "data.referring_user.email.domain_cannot_start_with_or_end_with_a_hyphen": {
          "category": "data",
          "error": "email::Validators::DomainCannotStartWithOrEndWithAHyphenError",
          "key": "data.referring_user.email.domain_cannot_start_with_or_end_with_a_hyphen",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "domain_cannot_start_with_or_end_with_a_hyphen"
        },
        "data.referring_user.email.first_part_cannot_be_empty": {
          "category": "data",
          "error": "email::Validators::FirstPartCannotBeEmptyError",
          "key": "data.referring_user.email.first_part_cannot_be_empty",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_cannot_be_empty"
        },
        "data.referring_user.email.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row": {
          "category": "data",
          "error": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
          "key": "data.referring_user.email.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row"
        },
        "data.referring_user.email.first_part_has_bad_characters": {
          "category": "data",
          "error": "email::Validators::FirstPartHasBadCharactersError",
          "key": "data.referring_user.email.first_part_has_bad_characters",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "first_part_has_bad_characters"
        },
        "data.referring_user.email.must_have_an_at_sign": {
          "category": "data",
          "error": "email::Validators::MustHaveAnAtSignError",
          "key": "data.referring_user.email.must_have_an_at_sign",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "must_have_an_at_sign"
        },
        "data.referring_user.email.second_part_cannot_be_empty": {
          "category": "data",
          "error": "email::Validators::SecondPartCannotBeEmptyError",
          "key": "data.referring_user.email.second_part_cannot_be_empty",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "second_part_cannot_be_empty"
        },
        "data.referring_user.email.second_part_has_bad_characters": {
          "category": "data",
          "error": "email::Validators::SecondPartHasBadCharactersError",
          "key": "data.referring_user.email.second_part_has_bad_characters",
          "path": [
            "referring_user",
            "email"
          ],
          "runtime_path": [
          ],
          "symbol": "second_part_has_bad_characters"
        },
        "data.referring_user.first_name.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referring_user.first_name.cannot_cast",
          "path": [
            "referring_user",
            "first_name"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.id.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referring_user.id.cannot_cast",
          "path": [
            "referring_user",
            "id"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.last_name.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.referring_user.last_name.cannot_cast",
          "path": [
            "referring_user",
            "last_name"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.referring_user.unexpected_attributes": {
          "category": "data",
          "error": "attributes::element_type_declarations::UnexpectedAttributesError",
          "key": "data.referring_user.unexpected_attributes",
          "path": [
            "referring_user"
          ],
          "runtime_path": [
          ],
          "symbol": "unexpected_attributes"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "error": "attributes::element_type_declarations::UnexpectedAttributesError",
          "key": "data.unexpected_attributes",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "unexpected_attributes"
        }
      },
      "errors_transformers": [
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Transformers::AuthErrorsTransformer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Transformers::AuthErrorsTransformer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Transformers::AuthErrorsTransformer",
          "scoped_full_path": [
            "CommandConnectors",
            "Transformers",
            "AuthErrorsTransformer"
          ],
          "scoped_name": "Transformers::AuthErrorsTransformer",
          "scoped_path": [
            "Transformers",
            "AuthErrorsTransformer"
          ],
          "scoped_prefix": [
            "Transformers"
          ],
          "scoped_short_name": "AuthErrorsTransformer"
        }
      ],
      "errors_types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck"
      ],
      "full_command_name": "SomeOrg::Auth::CreateUser",
      "inputs_transformers": [
      ],
      "inputs_type": {
        "element_type_declarations": {
          "email": {
            "type": "email"
          },
          "first_name": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "last_name": {
            "type": "string"
          },
          "referring_user": {
            "type": "SomeOrg::Auth::User"
          }
        },
        "type": "attributes"
      },
      "inputs_types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer",
        "string",
        "email",
        "SomeOrg::Auth::User"
      ],
      "organization": "SomeOrg",
      "organization_name": "SomeOrg",
      "parent": [
        "domain",
        "SomeOrg::Auth"
      ],
      "pre_commit_transformers": [
      ],
      "reference": "SomeOrg::Auth::CreateUser",
      "requires_authentication": null,
      "result_transformers": [
      ],
      "result_type": {
        "type": "SomeOrg::Auth::User"
      },
      "result_types_depended_on": [
        "SomeOrg::Auth::User"
      ],
      "scoped_category": "command",
      "scoped_full_name": "SomeOrg::Auth::CreateUser",
      "scoped_full_path": [
        "SomeOrg",
        "Auth",
        "CreateUser"
      ],
      "scoped_name": "CreateUser",
      "scoped_path": [
        "CreateUser"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "CreateUser",
      "serializers": [
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Serializers::ErrorsSerializer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Serializers::ErrorsSerializer",
          "scoped_full_path": [
            "CommandConnectors",
            "Serializers",
            "ErrorsSerializer"
          ],
          "scoped_name": "Serializers::ErrorsSerializer",
          "scoped_path": [
            "Serializers",
            "ErrorsSerializer"
          ],
          "scoped_prefix": [
            "Serializers"
          ],
          "scoped_short_name": "ErrorsSerializer"
        },
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Serializers::JsonSerializer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Serializers::JsonSerializer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Serializers::JsonSerializer",
          "scoped_full_path": [
            "CommandConnectors",
            "Serializers",
            "JsonSerializer"
          ],
          "scoped_name": "Serializers::JsonSerializer",
          "scoped_path": [
            "Serializers",
            "JsonSerializer"
          ],
          "scoped_prefix": [
            "Serializers"
          ],
          "scoped_short_name": "JsonSerializer"
        }
      ],
      "types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer",
        "string",
        "email",
        "SomeOrg::Auth::User"
      ]
    },
    "SomeOrg::Math::CalculateExponent": {
      "authenticator": null,
      "capture_unknown_error": null,
      "command": "SomeOrg::Math::CalculateExponent",
      "depends_on": [
      ],
      "domain": "SomeOrg::Math",
      "domain_name": "SomeOrg::Math",
      "error_types": {
        "data.base.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.base.cannot_cast",
          "path": [
            "base"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.base.missing_required_attribute": {
          "category": "data",
          "error": "attributes::required::MissingRequiredAttributeError",
          "key": "data.base.missing_required_attribute",
          "path": [
            "base"
          ],
          "runtime_path": [
          ],
          "symbol": "missing_required_attribute"
        },
        "data.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.cannot_cast",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.exponent.cannot_cast": {
          "category": "data",
          "error": "Value::Processor::Casting::CannotCastError",
          "key": "data.exponent.cannot_cast",
          "path": [
            "exponent"
          ],
          "runtime_path": [
          ],
          "symbol": "cannot_cast"
        },
        "data.exponent.missing_required_attribute": {
          "category": "data",
          "error": "attributes::required::MissingRequiredAttributeError",
          "key": "data.exponent.missing_required_attribute",
          "path": [
            "exponent"
          ],
          "runtime_path": [
          ],
          "symbol": "missing_required_attribute"
        },
        "data.missing_required_attribute": {
          "category": "data",
          "error": "attributes::required::MissingRequiredAttributeError",
          "key": "data.missing_required_attribute",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "missing_required_attribute"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "error": "attributes::element_type_declarations::UnexpectedAttributesError",
          "key": "data.unexpected_attributes",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "unexpected_attributes"
        },
        "runtime.negative_exponent": {
          "category": "runtime",
          "error": "SomeOrg::Math::CalculateExponent::NegativeExponentError",
          "key": "runtime.negative_exponent",
          "path": [
          ],
          "runtime_path": [
          ],
          "symbol": "negative_exponent"
        }
      },
      "errors_transformers": [
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Transformers::AuthErrorsTransformer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Transformers::AuthErrorsTransformer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Transformers::AuthErrorsTransformer",
          "scoped_full_path": [
            "CommandConnectors",
            "Transformers",
            "AuthErrorsTransformer"
          ],
          "scoped_name": "Transformers::AuthErrorsTransformer",
          "scoped_path": [
            "Transformers",
            "AuthErrorsTransformer"
          ],
          "scoped_prefix": [
            "Transformers"
          ],
          "scoped_short_name": "AuthErrorsTransformer"
        }
      ],
      "errors_types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer"
      ],
      "full_command_name": "SomeOrg::Math::CalculateExponent",
      "inputs_transformers": [
      ],
      "inputs_type": {
        "element_type_declarations": {
          "base": {
            "type": "integer"
          },
          "exponent": {
            "type": "integer"
          }
        },
        "required": [
          "base",
          "exponent"
        ],
        "type": "attributes"
      },
      "inputs_types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer"
      ],
      "organization": "SomeOrg",
      "organization_name": "SomeOrg",
      "parent": [
        "domain",
        "SomeOrg::Math"
      ],
      "pre_commit_transformers": [
      ],
      "reference": "SomeOrg::Math::CalculateExponent",
      "requires_authentication": null,
      "result_transformers": [
      ],
      "result_type": {
        "type": "integer"
      },
      "result_types_depended_on": [
        "integer"
      ],
      "scoped_category": "command",
      "scoped_full_name": "SomeOrg::Math::CalculateExponent",
      "scoped_full_path": [
        "SomeOrg",
        "Math",
        "CalculateExponent"
      ],
      "scoped_name": "CalculateExponent",
      "scoped_path": [
        "CalculateExponent"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "CalculateExponent",
      "serializers": [
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Serializers::ErrorsSerializer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Serializers::ErrorsSerializer",
          "scoped_full_path": [
            "CommandConnectors",
            "Serializers",
            "ErrorsSerializer"
          ],
          "scoped_name": "Serializers::ErrorsSerializer",
          "scoped_path": [
            "Serializers",
            "ErrorsSerializer"
          ],
          "scoped_prefix": [
            "Serializers"
          ],
          "scoped_short_name": "ErrorsSerializer"
        },
        {
          "domain": "CommandConnectors",
          "name": "Foobara::CommandConnectors::Serializers::JsonSerializer",
          "parent": [
            "domain",
            "CommandConnectors"
          ],
          "processor_type": "transformer",
          "reference": "CommandConnectors::Serializers::JsonSerializer",
          "scoped_category": "processor_class",
          "scoped_full_name": "CommandConnectors::Serializers::JsonSerializer",
          "scoped_full_path": [
            "CommandConnectors",
            "Serializers",
            "JsonSerializer"
          ],
          "scoped_name": "Serializers::JsonSerializer",
          "scoped_path": [
            "Serializers",
            "JsonSerializer"
          ],
          "scoped_prefix": [
            "Serializers"
          ],
          "scoped_short_name": "JsonSerializer"
        }
      ],
      "types_depended_on": [
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer"
      ]
    }
  },
  "domain": {
    "SomeDomainWithoutOrg": {
      "commands": [
        "SomeDomainWithoutOrg::CommandWithDomainButNoOrg"
      ],
      "depends_on": [
      ],
      "domain": "SomeDomainWithoutOrg",
      "domain_name": "SomeDomainWithoutOrg",
      "organization": "global_organization",
      "organization_name": "global_organization",
      "parent": [
        "organization",
        "global_organization"
      ],
      "reference": "SomeDomainWithoutOrg",
      "scoped_category": "domain",
      "scoped_full_name": "SomeDomainWithoutOrg",
      "scoped_full_path": [
        "SomeDomainWithoutOrg"
      ],
      "scoped_name": "SomeDomainWithoutOrg",
      "scoped_path": [
        "SomeDomainWithoutOrg"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "SomeDomainWithoutOrg",
      "types": [
      ]
    },
    "SomeOrg::Auth": {
      "commands": [
        "SomeOrg::Auth::CreateReferral",
        "SomeOrg::Auth::CreateUser"
      ],
      "depends_on": [
      ],
      "domain": "SomeOrg::Auth",
      "domain_name": "Auth",
      "organization": "SomeOrg",
      "organization_name": "SomeOrg",
      "parent": [
        "organization",
        "SomeOrg"
      ],
      "reference": "SomeOrg::Auth",
      "scoped_category": "domain",
      "scoped_full_name": "SomeOrg::Auth",
      "scoped_full_path": [
        "SomeOrg",
        "Auth"
      ],
      "scoped_name": "Auth",
      "scoped_path": [
        "Auth"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "Auth",
      "types": [
        "SomeOrg::Auth::User",
        "SomeOrg::Auth::Referral"
      ]
    },
    "SomeOrg::Math": {
      "commands": [
        "SomeOrg::Math::CalculateExponent"
      ],
      "depends_on": [
      ],
      "domain": "SomeOrg::Math",
      "domain_name": "Math",
      "organization": "SomeOrg",
      "organization_name": "SomeOrg",
      "parent": [
        "organization",
        "SomeOrg"
      ],
      "reference": "SomeOrg::Math",
      "scoped_category": "domain",
      "scoped_full_name": "SomeOrg::Math",
      "scoped_full_path": [
        "SomeOrg",
        "Math"
      ],
      "scoped_name": "Math",
      "scoped_path": [
        "Math"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "Math",
      "types": [
      ]
    },
    "global_organization::global_domain": {
      "commands": [
        "GlobalCommand"
      ],
      "depends_on": [
      ],
      "domain": "global_organization::global_domain",
      "domain_name": "global_domain",
      "organization": "global_organization",
      "organization_name": "global_organization",
      "parent": [
        "organization",
        "global_organization"
      ],
      "reference": "global_organization::global_domain",
      "scoped_category": "domain",
      "scoped_full_name": "",
      "scoped_full_path": [
      ],
      "scoped_name": null,
      "scoped_path": [
      ],
      "scoped_prefix": [
      ],
      "scoped_short_name": null,
      "types": [
      ]
    }
  },
  "error": {
    "SomeOrg::Math::CalculateExponent::NegativeExponentError": {
      "category": "runtime",
      "context_type_declaration": {
        "element_type_declarations": {
          "exponent": {
            "type": "integer"
          }
        },
        "type": "attributes"
      },
      "domain": "SomeOrg::Math",
      "is_fatal": true,
      "organization": "SomeOrg",
      "parent": [
        "command",
        "SomeOrg::Math::CalculateExponent"
      ],
      "reference": "SomeOrg::Math::CalculateExponent::NegativeExponentError",
      "scoped_category": "error",
      "scoped_full_name": "SomeOrg::Math::CalculateExponent::NegativeExponentError",
      "scoped_full_path": [
        "SomeOrg",
        "Math",
        "CalculateExponent",
        "NegativeExponentError"
      ],
      "scoped_name": "NegativeExponentError",
      "scoped_path": [
        "NegativeExponentError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "NegativeExponentError",
      "symbol": "negative_exponent"
    },
    "Value::Processor::Casting::CannotCastError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "attribute_name": {
            "type": "symbol"
          },
          "cast_to": {
            "type": "duck"
          },
          "value": {
            "type": "duck"
          }
        },
        "type": "attributes"
      },
      "is_fatal": true,
      "parent": [
        "processor_class",
        "Value::Processor::Casting"
      ],
      "reference": "Value::Processor::Casting::CannotCastError",
      "scoped_category": "error",
      "scoped_full_name": "Value::Processor::Casting::CannotCastError",
      "scoped_full_path": [
        "Value",
        "Processor",
        "Casting",
        "CannotCastError"
      ],
      "scoped_name": "CannotCastError",
      "scoped_path": [
        "CannotCastError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "CannotCastError",
      "symbol": "cannot_cast"
    },
    "attributes::element_type_declarations::UnexpectedAttributesError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "allowed_attributes": {
            "element_type_declaration": {
              "type": "symbol"
            },
            "type": "array"
          },
          "unexpected_attributes": {
            "element_type_declaration": {
              "type": "symbol"
            },
            "type": "array"
          }
        },
        "type": "attributes"
      },
      "is_fatal": true,
      "parent": [
        "processor_class",
        "attributes::element_type_declarations"
      ],
      "reference": "attributes::element_type_declarations::UnexpectedAttributesError",
      "scoped_category": "error",
      "scoped_full_name": "attributes::element_type_declarations::UnexpectedAttributesError",
      "scoped_full_path": [
        "attributes",
        "element_type_declarations",
        "UnexpectedAttributesError"
      ],
      "scoped_name": "UnexpectedAttributesError",
      "scoped_path": [
        "UnexpectedAttributesError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "UnexpectedAttributesError",
      "symbol": "unexpected_attributes"
    },
    "attributes::required::MissingRequiredAttributeError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "attribute_name": {
            "type": "symbol"
          }
        },
        "type": "attributes"
      },
      "is_fatal": true,
      "parent": [
        "processor_class",
        "attributes::required"
      ],
      "reference": "attributes::required::MissingRequiredAttributeError",
      "scoped_category": "error",
      "scoped_full_name": "attributes::required::MissingRequiredAttributeError",
      "scoped_full_path": [
        "attributes",
        "required",
        "MissingRequiredAttributeError"
      ],
      "scoped_name": "MissingRequiredAttributeError",
      "scoped_path": [
        "MissingRequiredAttributeError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "MissingRequiredAttributeError",
      "symbol": "missing_required_attribute"
    },
    "email::Validators::CannotExceed64CharactersError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "negate_regex": {
            "type": "duck"
          },
          "regex": {
            "type": "duck"
          },
          "value": {
            "type": "duck"
          }
        },
        "type": "attributes"
      },
      "is_fatal": false,
      "reference": "email::Validators::CannotExceed64CharactersError",
      "scoped_category": "error",
      "scoped_full_name": "email::Validators::CannotExceed64CharactersError",
      "scoped_full_path": [
        "email",
        "Validators",
        "CannotExceed64CharactersError"
      ],
      "scoped_name": "CannotExceed64CharactersError",
      "scoped_path": [
        "CannotExceed64CharactersError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "CannotExceed64CharactersError",
      "symbol": "cannot_exceed64_characters"
    },
    "email::Validators::CannotHaveMultipleAtSignsError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "negate_regex": {
            "type": "duck"
          },
          "regex": {
            "type": "duck"
          },
          "value": {
            "type": "duck"
          }
        },
        "type": "attributes"
      },
      "is_fatal": false,
      "reference": "email::Validators::CannotHaveMultipleAtSignsError",
      "scoped_category": "error",
      "scoped_full_name": "email::Validators::CannotHaveMultipleAtSignsError",
      "scoped_full_path": [
        "email",
        "Validators",
        "CannotHaveMultipleAtSignsError"
      ],
      "scoped_name": "CannotHaveMultipleAtSignsError",
      "scoped_path": [
        "CannotHaveMultipleAtSignsError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "CannotHaveMultipleAtSignsError",
      "symbol": "cannot_have_multiple_at_signs"
    },
    "email::Validators::DomainCannotStartWithOrEndWithAHyphenError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "negate_regex": {
            "type": "duck"
          },
          "regex": {
            "type": "duck"
          },
          "value": {
            "type": "duck"
          }
        },
        "type": "attributes"
      },
      "is_fatal": false,
      "reference": "email::Validators::DomainCannotStartWithOrEndWithAHyphenError",
      "scoped_category": "error",
      "scoped_full_name": "email::Validators::DomainCannotStartWithOrEndWithAHyphenError",
      "scoped_full_path": [
        "email",
        "Validators",
        "DomainCannotStartWithOrEndWithAHyphenError"
      ],
      "scoped_name": "DomainCannotStartWithOrEndWithAHyphenError",
      "scoped_path": [
        "DomainCannotStartWithOrEndWithAHyphenError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "DomainCannotStartWithOrEndWithAHyphenError",
      "symbol": "domain_cannot_start_with_or_end_with_a_hyphen"
    },
    "email::Validators::FirstPartCannotBeEmptyError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "negate_regex": {
            "type": "duck"
          },
          "regex": {
            "type": "duck"
          },
          "value": {
            "type": "duck"
          }
        },
        "type": "attributes"
      },
      "is_fatal": false,
      "reference": "email::Validators::FirstPartCannotBeEmptyError",
      "scoped_category": "error",
      "scoped_full_name": "email::Validators::FirstPartCannotBeEmptyError",
      "scoped_full_path": [
        "email",
        "Validators",
        "FirstPartCannotBeEmptyError"
      ],
      "scoped_name": "FirstPartCannotBeEmptyError",
      "scoped_path": [
        "FirstPartCannotBeEmptyError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "FirstPartCannotBeEmptyError",
      "symbol": "first_part_cannot_be_empty"
    },
    "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "negate_regex": {
            "type": "duck"
          },
          "regex": {
            "type": "duck"
          },
          "value": {
            "type": "duck"
          }
        },
        "type": "attributes"
      },
      "is_fatal": false,
      "reference": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
      "scoped_category": "error",
      "scoped_full_name": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
      "scoped_full_path": [
        "email",
        "Validators",
        "FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError"
      ],
      "scoped_name": "FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
      "scoped_path": [
        "FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError",
      "symbol": "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row"
    },
    "email::Validators::FirstPartHasBadCharactersError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "negate_regex": {
            "type": "duck"
          },
          "regex": {
            "type": "duck"
          },
          "value": {
            "type": "duck"
          }
        },
        "type": "attributes"
      },
      "is_fatal": false,
      "reference": "email::Validators::FirstPartHasBadCharactersError",
      "scoped_category": "error",
      "scoped_full_name": "email::Validators::FirstPartHasBadCharactersError",
      "scoped_full_path": [
        "email",
        "Validators",
        "FirstPartHasBadCharactersError"
      ],
      "scoped_name": "FirstPartHasBadCharactersError",
      "scoped_path": [
        "FirstPartHasBadCharactersError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "FirstPartHasBadCharactersError",
      "symbol": "first_part_has_bad_characters"
    },
    "email::Validators::MustHaveAnAtSignError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "negate_regex": {
            "type": "duck"
          },
          "regex": {
            "type": "duck"
          },
          "value": {
            "type": "duck"
          }
        },
        "type": "attributes"
      },
      "is_fatal": false,
      "reference": "email::Validators::MustHaveAnAtSignError",
      "scoped_category": "error",
      "scoped_full_name": "email::Validators::MustHaveAnAtSignError",
      "scoped_full_path": [
        "email",
        "Validators",
        "MustHaveAnAtSignError"
      ],
      "scoped_name": "MustHaveAnAtSignError",
      "scoped_path": [
        "MustHaveAnAtSignError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "MustHaveAnAtSignError",
      "symbol": "must_have_an_at_sign"
    },
    "email::Validators::SecondPartCannotBeEmptyError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "negate_regex": {
            "type": "duck"
          },
          "regex": {
            "type": "duck"
          },
          "value": {
            "type": "duck"
          }
        },
        "type": "attributes"
      },
      "is_fatal": false,
      "reference": "email::Validators::SecondPartCannotBeEmptyError",
      "scoped_category": "error",
      "scoped_full_name": "email::Validators::SecondPartCannotBeEmptyError",
      "scoped_full_path": [
        "email",
        "Validators",
        "SecondPartCannotBeEmptyError"
      ],
      "scoped_name": "SecondPartCannotBeEmptyError",
      "scoped_path": [
        "SecondPartCannotBeEmptyError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "SecondPartCannotBeEmptyError",
      "symbol": "second_part_cannot_be_empty"
    },
    "email::Validators::SecondPartHasBadCharactersError": {
      "category": "data",
      "context_type_declaration": {
        "element_type_declarations": {
          "negate_regex": {
            "type": "duck"
          },
          "regex": {
            "type": "duck"
          },
          "value": {
            "type": "duck"
          }
        },
        "type": "attributes"
      },
      "is_fatal": false,
      "reference": "email::Validators::SecondPartHasBadCharactersError",
      "scoped_category": "error",
      "scoped_full_name": "email::Validators::SecondPartHasBadCharactersError",
      "scoped_full_path": [
        "email",
        "Validators",
        "SecondPartHasBadCharactersError"
      ],
      "scoped_name": "SecondPartHasBadCharactersError",
      "scoped_path": [
        "SecondPartHasBadCharactersError"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "SecondPartHasBadCharactersError",
      "symbol": "second_part_has_bad_characters"
    }
  },
  "organization": {
    "SomeOrg": {
      "domains": [
        "SomeOrg::Math",
        "SomeOrg::Auth"
      ],
      "organization": "SomeOrg",
      "organization_name": "SomeOrg",
      "reference": "SomeOrg",
      "scoped_category": "organization",
      "scoped_full_name": "SomeOrg",
      "scoped_full_path": [
        "SomeOrg"
      ],
      "scoped_name": "SomeOrg",
      "scoped_path": [
        "SomeOrg"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "SomeOrg"
    },
    "global_organization": {
      "domains": [
        "global_organization::global_domain",
        "SomeDomainWithoutOrg"
      ],
      "organization": "global_organization",
      "organization_name": "global_organization",
      "reference": "global_organization",
      "scoped_category": "organization",
      "scoped_full_name": "",
      "scoped_full_path": [
      ],
      "scoped_name": null,
      "scoped_path": [
      ],
      "scoped_prefix": [
      ],
      "scoped_short_name": null
    }
  },
  "processor": {
    "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer::EntityPrimaryKeyCaster": {
      "declaration_data": "SomeOrg::Auth::Referral",
      "name": "Foobara::TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer::EntityPrimaryKeyCaster",
      "parent": [
        "processor_class",
        "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer"
      ],
      "possible_errors": {
      },
      "processor_type": "caster",
      "reference": "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer::EntityPrimaryKeyCaster",
      "scoped_category": "processor_class",
      "scoped_full_name": "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer::EntityPrimaryKeyCaster",
      "scoped_full_path": [
        "TypeDeclarations",
        "Handlers",
        "ExtendEntityTypeDeclaration",
        "ToTypeTransformer",
        "EntityPrimaryKeyCaster"
      ],
      "scoped_name": "EntityPrimaryKeyCaster",
      "scoped_path": [
        "EntityPrimaryKeyCaster"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "EntityPrimaryKeyCaster"
    },
    "array::arrayable": {
      "name": "Foobara::BuiltinTypes::Array::Casters::Arrayable",
      "parent": [
        "type",
        "array"
      ],
      "possible_errors": {
      },
      "processor_type": "caster",
      "reference": "array::arrayable",
      "scoped_category": "processor_class",
      "scoped_full_name": "array::arrayable",
      "scoped_full_path": [
        "array",
        "arrayable"
      ],
      "scoped_name": "arrayable",
      "scoped_path": [
        "arrayable"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "arrayable"
    },
    "associative_array::array": {
      "name": "Foobara::BuiltinTypes::AssociativeArray::Casters::Array",
      "parent": [
        "type",
        "associative_array"
      ],
      "possible_errors": {
      },
      "processor_type": "caster",
      "reference": "associative_array::array",
      "scoped_category": "processor_class",
      "scoped_full_name": "associative_array::array",
      "scoped_full_path": [
        "associative_array",
        "array"
      ],
      "scoped_name": "array",
      "scoped_path": [
        "array"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "array"
    },
    "attributes::hash": {
      "name": "Foobara::BuiltinTypes::Attributes::Casters::Hash",
      "parent": [
        "type",
        "attributes"
      ],
      "possible_errors": {
      },
      "processor_type": "caster",
      "reference": "attributes::hash",
      "scoped_category": "processor_class",
      "scoped_full_name": "attributes::hash",
      "scoped_full_path": [
        "attributes",
        "hash"
      ],
      "scoped_name": "hash",
      "scoped_path": [
        "hash"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "hash"
    },
    "email::cannot_exceed64_characters": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Email::Validators::CannotExceed64Characters",
      "parent": [
        "type",
        "email"
      ],
      "possible_errors": {
        "data.cannot_exceed64_characters": "email::Validators::CannotExceed64CharactersError"
      },
      "processor_type": "transformer",
      "reference": "email::cannot_exceed64_characters",
      "scoped_category": "processor_class",
      "scoped_full_name": "email::cannot_exceed64_characters",
      "scoped_full_path": [
        "email",
        "cannot_exceed64_characters"
      ],
      "scoped_name": "cannot_exceed64_characters",
      "scoped_path": [
        "cannot_exceed64_characters"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "cannot_exceed64_characters"
    },
    "email::cannot_have_multiple_at_signs": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Email::Validators::CannotHaveMultipleAtSigns",
      "parent": [
        "type",
        "email"
      ],
      "possible_errors": {
        "data.cannot_have_multiple_at_signs": "email::Validators::CannotHaveMultipleAtSignsError"
      },
      "processor_type": "transformer",
      "reference": "email::cannot_have_multiple_at_signs",
      "scoped_category": "processor_class",
      "scoped_full_name": "email::cannot_have_multiple_at_signs",
      "scoped_full_path": [
        "email",
        "cannot_have_multiple_at_signs"
      ],
      "scoped_name": "cannot_have_multiple_at_signs",
      "scoped_path": [
        "cannot_have_multiple_at_signs"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "cannot_have_multiple_at_signs"
    },
    "email::domain_cannot_start_with_or_end_with_a_hyphen": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Email::Validators::DomainCannotStartWithOrEndWithAHyphen",
      "parent": [
        "type",
        "email"
      ],
      "possible_errors": {
        "data.domain_cannot_start_with_or_end_with_a_hyphen": "email::Validators::DomainCannotStartWithOrEndWithAHyphenError"
      },
      "processor_type": "transformer",
      "reference": "email::domain_cannot_start_with_or_end_with_a_hyphen",
      "scoped_category": "processor_class",
      "scoped_full_name": "email::domain_cannot_start_with_or_end_with_a_hyphen",
      "scoped_full_path": [
        "email",
        "domain_cannot_start_with_or_end_with_a_hyphen"
      ],
      "scoped_name": "domain_cannot_start_with_or_end_with_a_hyphen",
      "scoped_path": [
        "domain_cannot_start_with_or_end_with_a_hyphen"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "domain_cannot_start_with_or_end_with_a_hyphen"
    },
    "email::downcase": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Email::Transformers::Downcase",
      "parent": [
        "type",
        "email"
      ],
      "possible_errors": {
      },
      "processor_type": "transformer",
      "reference": "email::downcase",
      "scoped_category": "processor_class",
      "scoped_full_name": "email::downcase",
      "scoped_full_path": [
        "email",
        "downcase"
      ],
      "scoped_name": "downcase",
      "scoped_path": [
        "downcase"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "downcase"
    },
    "email::first_part_cannot_be_empty": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Email::Validators::FirstPartCannotBeEmpty",
      "parent": [
        "type",
        "email"
      ],
      "possible_errors": {
        "data.first_part_cannot_be_empty": "email::Validators::FirstPartCannotBeEmptyError"
      },
      "processor_type": "transformer",
      "reference": "email::first_part_cannot_be_empty",
      "scoped_category": "processor_class",
      "scoped_full_name": "email::first_part_cannot_be_empty",
      "scoped_full_path": [
        "email",
        "first_part_cannot_be_empty"
      ],
      "scoped_name": "first_part_cannot_be_empty",
      "scoped_path": [
        "first_part_cannot_be_empty"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "first_part_cannot_be_empty"
    },
    "email::first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARow",
      "parent": [
        "type",
        "email"
      ],
      "possible_errors": {
        "data.first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row": "email::Validators::FirstPartCannotStartWithOrEndWithADotOrHaveTwoDotsInARowError"
      },
      "processor_type": "transformer",
      "reference": "email::first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
      "scoped_category": "processor_class",
      "scoped_full_name": "email::first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
      "scoped_full_path": [
        "email",
        "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row"
      ],
      "scoped_name": "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
      "scoped_path": [
        "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row"
    },
    "email::first_part_has_bad_characters": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Email::Validators::FirstPartHasBadCharacters",
      "parent": [
        "type",
        "email"
      ],
      "possible_errors": {
        "data.first_part_has_bad_characters": "email::Validators::FirstPartHasBadCharactersError"
      },
      "processor_type": "transformer",
      "reference": "email::first_part_has_bad_characters",
      "scoped_category": "processor_class",
      "scoped_full_name": "email::first_part_has_bad_characters",
      "scoped_full_path": [
        "email",
        "first_part_has_bad_characters"
      ],
      "scoped_name": "first_part_has_bad_characters",
      "scoped_path": [
        "first_part_has_bad_characters"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "first_part_has_bad_characters"
    },
    "email::must_have_an_at_sign": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Email::Validators::MustHaveAnAtSign",
      "parent": [
        "type",
        "email"
      ],
      "possible_errors": {
        "data.must_have_an_at_sign": "email::Validators::MustHaveAnAtSignError"
      },
      "processor_type": "transformer",
      "reference": "email::must_have_an_at_sign",
      "scoped_category": "processor_class",
      "scoped_full_name": "email::must_have_an_at_sign",
      "scoped_full_path": [
        "email",
        "must_have_an_at_sign"
      ],
      "scoped_name": "must_have_an_at_sign",
      "scoped_path": [
        "must_have_an_at_sign"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "must_have_an_at_sign"
    },
    "email::second_part_cannot_be_empty": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Email::Validators::SecondPartCannotBeEmpty",
      "parent": [
        "type",
        "email"
      ],
      "possible_errors": {
        "data.second_part_cannot_be_empty": "email::Validators::SecondPartCannotBeEmptyError"
      },
      "processor_type": "transformer",
      "reference": "email::second_part_cannot_be_empty",
      "scoped_category": "processor_class",
      "scoped_full_name": "email::second_part_cannot_be_empty",
      "scoped_full_path": [
        "email",
        "second_part_cannot_be_empty"
      ],
      "scoped_name": "second_part_cannot_be_empty",
      "scoped_path": [
        "second_part_cannot_be_empty"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "second_part_cannot_be_empty"
    },
    "email::second_part_has_bad_characters": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Email::Validators::SecondPartHasBadCharacters",
      "parent": [
        "type",
        "email"
      ],
      "possible_errors": {
        "data.second_part_has_bad_characters": "email::Validators::SecondPartHasBadCharactersError"
      },
      "processor_type": "transformer",
      "reference": "email::second_part_has_bad_characters",
      "scoped_category": "processor_class",
      "scoped_full_name": "email::second_part_has_bad_characters",
      "scoped_full_path": [
        "email",
        "second_part_has_bad_characters"
      ],
      "scoped_name": "second_part_has_bad_characters",
      "scoped_path": [
        "second_part_has_bad_characters"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "second_part_has_bad_characters"
    },
    "entity::created_in_valid_state": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Entity::Validators::CreatedInValidState",
      "parent": [
        "type",
        "entity"
      ],
      "parent_declaration_data": {
        "type": "entity"
      },
      "possible_errors": {
      },
      "processor_type": "processor",
      "reference": "entity::created_in_valid_state",
      "scoped_category": "processor_class",
      "scoped_full_name": "entity::created_in_valid_state",
      "scoped_full_path": [
        "entity",
        "created_in_valid_state"
      ],
      "scoped_name": "created_in_valid_state",
      "scoped_path": [
        "created_in_valid_state"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "created_in_valid_state"
    },
    "entity::hash": {
      "name": "Foobara::BuiltinTypes::Entity::Casters::Hash",
      "parent": [
        "type",
        "entity"
      ],
      "parent_declaration_data": {
        "type": "entity"
      },
      "possible_errors": {
      },
      "processor_type": "caster",
      "reference": "entity::hash",
      "scoped_category": "processor_class",
      "scoped_full_name": "entity::hash",
      "scoped_full_path": [
        "entity",
        "hash"
      ],
      "scoped_name": "hash",
      "scoped_path": [
        "hash"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "hash"
    },
    "integer::string": {
      "name": "Foobara::BuiltinTypes::Integer::Casters::String",
      "parent": [
        "type",
        "integer"
      ],
      "possible_errors": {
      },
      "processor_type": "caster",
      "reference": "integer::string",
      "scoped_category": "processor_class",
      "scoped_full_name": "integer::string",
      "scoped_full_path": [
        "integer",
        "string"
      ],
      "scoped_name": "string",
      "scoped_path": [
        "string"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "string"
    },
    "model::attributes_declaration": {
      "declaration_data": true,
      "name": "Foobara::BuiltinTypes::Model::Validators::AttributesDeclaration",
      "parent": [
        "type",
        "model"
      ],
      "parent_declaration_data": {
        "type": "model"
      },
      "possible_errors": {
      },
      "processor_type": "processor",
      "reference": "model::attributes_declaration",
      "scoped_category": "processor_class",
      "scoped_full_name": "model::attributes_declaration",
      "scoped_full_path": [
        "model",
        "attributes_declaration"
      ],
      "scoped_name": "attributes_declaration",
      "scoped_path": [
        "attributes_declaration"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "attributes_declaration"
    },
    "model::hash": {
      "name": "Foobara::BuiltinTypes::Model::Casters::Hash",
      "parent": [
        "type",
        "model"
      ],
      "parent_declaration_data": {
        "type": "model"
      },
      "possible_errors": {
      },
      "processor_type": "caster",
      "reference": "model::hash",
      "scoped_category": "processor_class",
      "scoped_full_name": "model::hash",
      "scoped_full_path": [
        "model",
        "hash"
      ],
      "scoped_name": "hash",
      "scoped_path": [
        "hash"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "hash"
    },
    "string::symbol": {
      "name": "Foobara::BuiltinTypes::String::Casters::Symbol",
      "parent": [
        "type",
        "string"
      ],
      "possible_errors": {
      },
      "processor_type": "caster",
      "reference": "string::symbol",
      "scoped_category": "processor_class",
      "scoped_full_name": "string::symbol",
      "scoped_full_path": [
        "string",
        "symbol"
      ],
      "scoped_name": "symbol",
      "scoped_path": [
        "symbol"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "symbol"
    },
    "symbol::string": {
      "name": "Foobara::BuiltinTypes::Symbol::Casters::String",
      "parent": [
        "type",
        "symbol"
      ],
      "parent_declaration_data": {
        "type": "symbol"
      },
      "possible_errors": {
      },
      "processor_type": "caster",
      "reference": "symbol::string",
      "scoped_category": "processor_class",
      "scoped_full_name": "symbol::string",
      "scoped_full_path": [
        "symbol",
        "string"
      ],
      "scoped_name": "string",
      "scoped_path": [
        "string"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "string"
    }
  },
  "processor_class": {
    "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration": {
      "name": "Foobara::TypeDeclarations::Handlers::ExtendEntityTypeDeclaration",
      "processor_type": "type_declaration_handler",
      "reference": "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration",
      "scoped_category": "processor_class",
      "scoped_full_name": "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration",
      "scoped_full_path": [
        "TypeDeclarations",
        "Handlers",
        "ExtendEntityTypeDeclaration"
      ],
      "scoped_name": "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration",
      "scoped_path": [
        "TypeDeclarations",
        "Handlers",
        "ExtendEntityTypeDeclaration"
      ],
      "scoped_prefix": [
        "TypeDeclarations",
        "Handlers"
      ],
      "scoped_short_name": "ExtendEntityTypeDeclaration"
    },
    "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer": {
      "name": "Foobara::TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer",
      "parent": [
        "processor_class",
        "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration"
      ],
      "processor_type": "transformer",
      "reference": "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer",
      "scoped_category": "processor_class",
      "scoped_full_name": "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer",
      "scoped_full_path": [
        "TypeDeclarations",
        "Handlers",
        "ExtendEntityTypeDeclaration",
        "ToTypeTransformer"
      ],
      "scoped_name": "ToTypeTransformer",
      "scoped_path": [
        "ToTypeTransformer"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "ToTypeTransformer"
    },
    "Value::Processor::Casting": {
      "name": "Foobara::Value::Processor::Casting",
      "processor_type": "casting",
      "reference": "Value::Processor::Casting",
      "scoped_category": "processor_class",
      "scoped_full_name": "Value::Processor::Casting",
      "scoped_full_path": [
        "Value",
        "Processor",
        "Casting"
      ],
      "scoped_name": "Value::Processor::Casting",
      "scoped_path": [
        "Value",
        "Processor",
        "Casting"
      ],
      "scoped_prefix": [
        "Value",
        "Processor"
      ],
      "scoped_short_name": "Casting"
    },
    "array::element_type_declaration": {
      "name": "Foobara::BuiltinTypes::Array::SupportedProcessors::ElementTypeDeclaration",
      "parent": [
        "type",
        "array"
      ],
      "processor_type": "processor",
      "reference": "array::element_type_declaration",
      "scoped_category": "processor_class",
      "scoped_full_name": "array::element_type_declaration",
      "scoped_full_path": [
        "array",
        "element_type_declaration"
      ],
      "scoped_name": "element_type_declaration",
      "scoped_path": [
        "element_type_declaration"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "element_type_declaration"
    },
    "array::size": {
      "name": "Foobara::BuiltinTypes::Array::SupportedValidators::Size",
      "parent": [
        "type",
        "array"
      ],
      "processor_type": "transformer",
      "reference": "array::size",
      "scoped_category": "processor_class",
      "scoped_full_name": "array::size",
      "scoped_full_path": [
        "array",
        "size"
      ],
      "scoped_name": "size",
      "scoped_path": [
        "size"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "size"
    },
    "associative_array::key_type_declaration": {
      "name": "Foobara::BuiltinTypes::AssociativeArray::SupportedProcessors::KeyTypeDeclaration",
      "parent": [
        "type",
        "associative_array"
      ],
      "processor_type": "processor",
      "reference": "associative_array::key_type_declaration",
      "scoped_category": "processor_class",
      "scoped_full_name": "associative_array::key_type_declaration",
      "scoped_full_path": [
        "associative_array",
        "key_type_declaration"
      ],
      "scoped_name": "key_type_declaration",
      "scoped_path": [
        "key_type_declaration"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "key_type_declaration"
    },
    "associative_array::value_type_declaration": {
      "name": "Foobara::BuiltinTypes::AssociativeArray::SupportedProcessors::ValueTypeDeclaration",
      "parent": [
        "type",
        "associative_array"
      ],
      "processor_type": "processor",
      "reference": "associative_array::value_type_declaration",
      "scoped_category": "processor_class",
      "scoped_full_name": "associative_array::value_type_declaration",
      "scoped_full_path": [
        "associative_array",
        "value_type_declaration"
      ],
      "scoped_name": "value_type_declaration",
      "scoped_path": [
        "value_type_declaration"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "value_type_declaration"
    },
    "attributes::defaults": {
      "name": "Foobara::BuiltinTypes::Attributes::SupportedTransformers::Defaults",
      "parent": [
        "type",
        "attributes"
      ],
      "processor_type": "transformer",
      "reference": "attributes::defaults",
      "scoped_category": "processor_class",
      "scoped_full_name": "attributes::defaults",
      "scoped_full_path": [
        "attributes",
        "defaults"
      ],
      "scoped_name": "defaults",
      "scoped_path": [
        "defaults"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "defaults"
    },
    "attributes::element_type_declarations": {
      "name": "Foobara::BuiltinTypes::Attributes::SupportedProcessors::ElementTypeDeclarations",
      "parent": [
        "type",
        "attributes"
      ],
      "processor_type": "processor",
      "reference": "attributes::element_type_declarations",
      "scoped_category": "processor_class",
      "scoped_full_name": "attributes::element_type_declarations",
      "scoped_full_path": [
        "attributes",
        "element_type_declarations"
      ],
      "scoped_name": "element_type_declarations",
      "scoped_path": [
        "element_type_declarations"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "element_type_declarations"
    },
    "attributes::required": {
      "name": "Foobara::BuiltinTypes::Attributes::SupportedValidators::Required",
      "parent": [
        "type",
        "attributes"
      ],
      "processor_type": "transformer",
      "reference": "attributes::required",
      "scoped_category": "processor_class",
      "scoped_full_name": "attributes::required",
      "scoped_full_path": [
        "attributes",
        "required"
      ],
      "scoped_name": "required",
      "scoped_path": [
        "required"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "required"
    },
    "number::max": {
      "name": "Foobara::BuiltinTypes::Number::SupportedValidators::Max",
      "parent": [
        "type",
        "number"
      ],
      "processor_type": "transformer",
      "reference": "number::max",
      "scoped_category": "processor_class",
      "scoped_full_name": "number::max",
      "scoped_full_path": [
        "number",
        "max"
      ],
      "scoped_name": "max",
      "scoped_path": [
        "max"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "max"
    },
    "number::min": {
      "name": "Foobara::BuiltinTypes::Number::SupportedValidators::Min",
      "parent": [
        "type",
        "number"
      ],
      "processor_type": "transformer",
      "reference": "number::min",
      "scoped_category": "processor_class",
      "scoped_full_name": "number::min",
      "scoped_full_path": [
        "number",
        "min"
      ],
      "scoped_name": "min",
      "scoped_path": [
        "min"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "min"
    },
    "string::downcase": {
      "name": "Foobara::BuiltinTypes::String::SupportedTransformers::Downcase",
      "parent": [
        "type",
        "string"
      ],
      "processor_type": "transformer",
      "reference": "string::downcase",
      "scoped_category": "processor_class",
      "scoped_full_name": "string::downcase",
      "scoped_full_path": [
        "string",
        "downcase"
      ],
      "scoped_name": "downcase",
      "scoped_path": [
        "downcase"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "downcase"
    },
    "string::matches": {
      "name": "Foobara::BuiltinTypes::String::SupportedValidators::Matches",
      "parent": [
        "type",
        "string"
      ],
      "processor_type": "transformer",
      "reference": "string::matches",
      "scoped_category": "processor_class",
      "scoped_full_name": "string::matches",
      "scoped_full_path": [
        "string",
        "matches"
      ],
      "scoped_name": "matches",
      "scoped_path": [
        "matches"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "matches"
    },
    "string::max_length": {
      "name": "Foobara::BuiltinTypes::String::SupportedValidators::MaxLength",
      "parent": [
        "type",
        "string"
      ],
      "processor_type": "transformer",
      "reference": "string::max_length",
      "scoped_category": "processor_class",
      "scoped_full_name": "string::max_length",
      "scoped_full_path": [
        "string",
        "max_length"
      ],
      "scoped_name": "max_length",
      "scoped_path": [
        "max_length"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "max_length"
    }
  },
  "type": {
    "SomeOrg::Auth::Referral": {
      "associations": {
        "referred_user": "SomeOrg::Auth::User",
        "referring_user": "SomeOrg::Auth::User"
      },
      "attributes_type": {
        "element_type_declarations": {
          "channel": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "referred_user": {
            "type": "SomeOrg::Auth::User"
          },
          "referring_user": {
            "type": "SomeOrg::Auth::User"
          }
        },
        "type": "attributes"
      },
      "base_type": "entity",
      "declaration_data": {
        "attributes_declaration": {
          "element_type_declarations": {
            "channel": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "referred_user": {
              "type": "SomeOrg::Auth::User"
            },
            "referring_user": {
              "type": "SomeOrg::Auth::User"
            }
          },
          "type": "attributes"
        },
        "model_base_class": "Foobara::Entity",
        "model_class": "SomeOrg::Auth::Referral",
        "model_module": "SomeOrg::Auth",
        "name": "Referral",
        "primary_key": "id",
        "type": "entity"
      },
      "deep_associations": {
        "referred_user": "SomeOrg::Auth::User",
        "referring_user": "SomeOrg::Auth::User"
      },
      "deep_depends_on": [
        "SomeOrg::Auth::User"
      ],
      "depends_on": [
        "SomeOrg::Auth::User"
      ],
      "domain": "SomeOrg::Auth",
      "domain_name": "Auth",
      "entity_name": "Referral",
      "model_base_class": "Foobara::Entity",
      "model_class": "SomeOrg::Auth::Referral",
      "name": "Referral",
      "organization": "SomeOrg",
      "organization_name": "SomeOrg",
      "parent": [
        "domain",
        "SomeOrg::Auth"
      ],
      "primary_key_attribute": "id",
      "primary_key_type": {
        "type": "integer"
      },
      "processors": {
        "casters": [
          "entity::hash",
          "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer::EntityPrimaryKeyCaster"
        ],
        "transformers": [
        ],
        "validators": [
          "entity::created_in_valid_state"
        ]
      },
      "reference": "SomeOrg::Auth::Referral",
      "scoped_category": "type",
      "scoped_full_name": "SomeOrg::Auth::Referral",
      "scoped_full_path": [
        "SomeOrg",
        "Auth",
        "Referral"
      ],
      "scoped_name": "Referral",
      "scoped_path": [
        "Referral"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "Referral",
      "supported_processors": [
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
      ],
      "target_classes": [
        "SomeOrg::Auth::Referral"
      ],
      "types_depended_on": [
        "entity",
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer",
        "string",
        "SomeOrg::Auth::User"
      ]
    },
    "SomeOrg::Auth::User": {
      "associations": {
      },
      "attributes_type": {
        "element_type_declarations": {
          "email": {
            "type": "email"
          },
          "first_name": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "last_name": {
            "type": "string"
          }
        },
        "type": "attributes"
      },
      "base_type": "entity",
      "declaration_data": {
        "attributes_declaration": {
          "element_type_declarations": {
            "email": {
              "type": "email"
            },
            "first_name": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "last_name": {
              "type": "string"
            }
          },
          "type": "attributes"
        },
        "model_base_class": "Foobara::Entity",
        "model_class": "SomeOrg::Auth::User",
        "model_module": "SomeOrg::Auth",
        "name": "User",
        "primary_key": "id",
        "type": "entity"
      },
      "deep_associations": {
      },
      "deep_depends_on": [
      ],
      "depends_on": [
      ],
      "domain": "SomeOrg::Auth",
      "domain_name": "Auth",
      "entity_name": "User",
      "model_base_class": "Foobara::Entity",
      "model_class": "SomeOrg::Auth::User",
      "name": "User",
      "organization": "SomeOrg",
      "organization_name": "SomeOrg",
      "parent": [
        "domain",
        "SomeOrg::Auth"
      ],
      "primary_key_attribute": "id",
      "primary_key_type": {
        "type": "integer"
      },
      "processors": {
        "casters": [
          "entity::hash",
          "TypeDeclarations::Handlers::ExtendEntityTypeDeclaration::ToTypeTransformer::EntityPrimaryKeyCaster"
        ],
        "transformers": [
        ],
        "validators": [
          "entity::created_in_valid_state"
        ]
      },
      "reference": "SomeOrg::Auth::User",
      "scoped_category": "type",
      "scoped_full_name": "SomeOrg::Auth::User",
      "scoped_full_path": [
        "SomeOrg",
        "Auth",
        "User"
      ],
      "scoped_name": "User",
      "scoped_path": [
        "User"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "User",
      "supported_processors": [
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
      ],
      "target_classes": [
        "SomeOrg::Auth::User"
      ],
      "types_depended_on": [
        "entity",
        "attributes",
        "array",
        "symbol",
        "duck",
        "integer",
        "string",
        "email"
      ]
    },
    "array": {
      "base_type": "duckture",
      "declaration_data": {
        "type": "array"
      },
      "name": "array",
      "processors": {
        "casters": [
          "array::arrayable"
        ],
        "transformers": [
        ],
        "validators": [
        ]
      },
      "reference": "array",
      "scoped_category": "type",
      "scoped_full_name": "array",
      "scoped_full_path": [
        "array"
      ],
      "scoped_name": "array",
      "scoped_path": [
        "array"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "array",
      "supported_processors": [
        "array::element_type_declaration"
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
        "array::size"
      ],
      "target_classes": [
        "Array"
      ],
      "types_depended_on": [
        "duckture",
        "attributes",
        "symbol",
        "duck"
      ]
    },
    "associative_array": {
      "base_type": "duckture",
      "declaration_data": {
        "type": "associative_array"
      },
      "name": "associative_array",
      "processors": {
        "casters": [
          "associative_array::array"
        ],
        "transformers": [
        ],
        "validators": [
        ]
      },
      "reference": "associative_array",
      "scoped_category": "type",
      "scoped_full_name": "associative_array",
      "scoped_full_path": [
        "associative_array"
      ],
      "scoped_name": "associative_array",
      "scoped_path": [
        "associative_array"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "associative_array",
      "supported_processors": [
        "associative_array::key_type_declaration",
        "associative_array::value_type_declaration"
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
      ],
      "target_classes": [
        "Hash"
      ],
      "types_depended_on": [
        "duckture",
        "attributes",
        "array",
        "symbol",
        "duck"
      ]
    },
    "atomic_duck": {
      "base_type": "duck",
      "declaration_data": {
        "type": "atomic_duck"
      },
      "name": "atomic_duck",
      "processors": {
        "casters": [
        ],
        "transformers": [
        ],
        "validators": [
        ]
      },
      "reference": "atomic_duck",
      "scoped_category": "type",
      "scoped_full_name": "atomic_duck",
      "scoped_full_path": [
        "atomic_duck"
      ],
      "scoped_name": "atomic_duck",
      "scoped_path": [
        "atomic_duck"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "atomic_duck",
      "supported_processors": [
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
      ],
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "duck",
        "attributes",
        "array",
        "symbol"
      ]
    },
    "attributes": {
      "base_type": "associative_array",
      "declaration_data": {
        "type": "attributes"
      },
      "name": "attributes",
      "processors": {
        "casters": [
          "attributes::hash"
        ],
        "transformers": [
        ],
        "validators": [
        ]
      },
      "reference": "attributes",
      "scoped_category": "type",
      "scoped_full_name": "attributes",
      "scoped_full_path": [
        "attributes"
      ],
      "scoped_name": "attributes",
      "scoped_path": [
        "attributes"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "attributes",
      "supported_processors": [
        "attributes::element_type_declarations",
        "associative_array::key_type_declaration",
        "associative_array::value_type_declaration"
      ],
      "supported_transformers": [
        "attributes::defaults"
      ],
      "supported_validators": [
        "attributes::required"
      ],
      "target_classes": [
      ],
      "types_depended_on": [
        "associative_array",
        "array",
        "symbol",
        "duck"
      ]
    },
    "duck": {
      "base_type": null,
      "declaration_data": {
        "type": "duck"
      },
      "name": "duck",
      "processors": {
        "casters": [
        ],
        "transformers": [
        ],
        "validators": [
        ]
      },
      "reference": "duck",
      "scoped_category": "type",
      "scoped_full_name": "duck",
      "scoped_full_path": [
        "duck"
      ],
      "scoped_name": "duck",
      "scoped_path": [
        "duck"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "duck",
      "supported_processors": [
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
      ],
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "attributes",
        "array",
        "symbol"
      ]
    },
    "duckture": {
      "base_type": "duck",
      "declaration_data": {
        "type": "duckture"
      },
      "name": "duckture",
      "processors": {
        "casters": [
        ],
        "transformers": [
        ],
        "validators": [
        ]
      },
      "reference": "duckture",
      "scoped_category": "type",
      "scoped_full_name": "duckture",
      "scoped_full_path": [
        "duckture"
      ],
      "scoped_name": "duckture",
      "scoped_path": [
        "duckture"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "duckture",
      "supported_processors": [
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
      ],
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "duck",
        "attributes",
        "array",
        "symbol"
      ]
    },
    "email": {
      "base_type": "string",
      "declaration_data": {
        "type": "email"
      },
      "name": "email",
      "processors": {
        "casters": [
          "string::symbol"
        ],
        "transformers": [
          "email::downcase"
        ],
        "validators": [
          "email::first_part_has_bad_characters",
          "email::second_part_has_bad_characters",
          "email::must_have_an_at_sign",
          "email::cannot_have_multiple_at_signs",
          "email::first_part_cannot_start_with_or_end_with_a_dot_or_have_two_dots_in_a_row",
          "email::domain_cannot_start_with_or_end_with_a_hyphen",
          "email::first_part_cannot_be_empty",
          "email::second_part_cannot_be_empty",
          "email::cannot_exceed64_characters"
        ]
      },
      "reference": "email",
      "scoped_category": "type",
      "scoped_full_name": "email",
      "scoped_full_path": [
        "email"
      ],
      "scoped_name": "email",
      "scoped_path": [
        "email"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "email",
      "supported_processors": [
      ],
      "supported_transformers": [
        "string::downcase"
      ],
      "supported_validators": [
        "string::matches",
        "string::max_length"
      ],
      "target_classes": [
        "String"
      ],
      "types_depended_on": [
        "string",
        "attributes",
        "array",
        "symbol",
        "duck"
      ]
    },
    "entity": {
      "base_type": "model",
      "declaration_data": {
        "type": "entity"
      },
      "name": "entity",
      "processors": {
        "casters": [
          "entity::hash"
        ],
        "transformers": [
        ],
        "validators": [
          "entity::created_in_valid_state"
        ]
      },
      "reference": "entity",
      "scoped_category": "type",
      "scoped_full_name": "entity",
      "scoped_full_path": [
        "entity"
      ],
      "scoped_name": "entity",
      "scoped_path": [
        "entity"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "entity",
      "supported_processors": [
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
      ],
      "target_classes": [
      ],
      "types_depended_on": [
        "model",
        "attributes",
        "array",
        "symbol",
        "duck"
      ]
    },
    "integer": {
      "base_type": "number",
      "declaration_data": {
        "type": "integer"
      },
      "name": "integer",
      "processors": {
        "casters": [
          "integer::string"
        ],
        "transformers": [
        ],
        "validators": [
        ]
      },
      "reference": "integer",
      "scoped_category": "type",
      "scoped_full_name": "integer",
      "scoped_full_path": [
        "integer"
      ],
      "scoped_name": "integer",
      "scoped_path": [
        "integer"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "integer",
      "supported_processors": [
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
        "number::max",
        "number::min"
      ],
      "target_classes": [
        "Integer"
      ],
      "types_depended_on": [
        "number",
        "attributes",
        "array",
        "symbol",
        "duck"
      ]
    },
    "model": {
      "base_type": "atomic_duck",
      "declaration_data": {
        "type": "model"
      },
      "name": "model",
      "processors": {
        "casters": [
          "model::hash"
        ],
        "transformers": [
        ],
        "validators": [
          "model::attributes_declaration"
        ]
      },
      "reference": "model",
      "scoped_category": "type",
      "scoped_full_name": "model",
      "scoped_full_path": [
        "model"
      ],
      "scoped_name": "model",
      "scoped_path": [
        "model"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "model",
      "supported_processors": [
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
      ],
      "target_classes": [
      ],
      "types_depended_on": [
        "atomic_duck",
        "attributes",
        "array",
        "symbol",
        "duck"
      ]
    },
    "number": {
      "base_type": "atomic_duck",
      "declaration_data": {
        "type": "number"
      },
      "name": "number",
      "processors": {
        "casters": [
        ],
        "transformers": [
        ],
        "validators": [
        ]
      },
      "reference": "number",
      "scoped_category": "type",
      "scoped_full_name": "number",
      "scoped_full_path": [
        "number"
      ],
      "scoped_name": "number",
      "scoped_path": [
        "number"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "number",
      "supported_processors": [
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
        "number::max",
        "number::min"
      ],
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "atomic_duck",
        "attributes",
        "array",
        "symbol",
        "duck"
      ]
    },
    "string": {
      "base_type": "atomic_duck",
      "declaration_data": {
        "type": "string"
      },
      "name": "string",
      "processors": {
        "casters": [
          "string::symbol"
        ],
        "transformers": [
        ],
        "validators": [
        ]
      },
      "reference": "string",
      "scoped_category": "type",
      "scoped_full_name": "string",
      "scoped_full_path": [
        "string"
      ],
      "scoped_name": "string",
      "scoped_path": [
        "string"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "string",
      "supported_processors": [
      ],
      "supported_transformers": [
        "string::downcase"
      ],
      "supported_validators": [
        "string::matches",
        "string::max_length"
      ],
      "target_classes": [
        "String"
      ],
      "types_depended_on": [
        "atomic_duck",
        "attributes",
        "array",
        "symbol",
        "duck"
      ]
    },
    "symbol": {
      "base_type": "atomic_duck",
      "declaration_data": {
        "type": "symbol"
      },
      "name": "symbol",
      "processors": {
        "casters": [
          "symbol::string"
        ],
        "transformers": [
        ],
        "validators": [
        ]
      },
      "reference": "symbol",
      "scoped_category": "type",
      "scoped_full_name": "symbol",
      "scoped_full_path": [
        "symbol"
      ],
      "scoped_name": "symbol",
      "scoped_path": [
        "symbol"
      ],
      "scoped_prefix": null,
      "scoped_short_name": "symbol",
      "supported_processors": [
      ],
      "supported_transformers": [
      ],
      "supported_validators": [
      ],
      "target_classes": [
        "Symbol"
      ],
      "types_depended_on": [
        "atomic_duck",
        "attributes",
        "array",
        "duck"
      ]
    }
  }
}
