import { Domain } from "<%= path_to_root %>base/Domain"
<% command_generators.each do |command| %>
import {<%= command.command_name %>} from "<%= path_to_root %><%= command.import_path %>"
<% end %>
<% entity_generators.each do |entity| %>
import {<%= entity.entity_name %>} from "<%= path_to_root %><%= entity.import_path %>"
<% end %>

interface entitiesT {
<% entity_generators.each do |entity| %>
  readonly <%= entity.entity_name %>: <%= entity.entity_name %>,
<% end %>
}

const entities: entitiesT = {
<% entity_generators.each do |entity| %>
  <%= entity.entity_name %>,
<% end %>
}

export class <%= domain_name %>Class extends Domain {
  constructor() {
    super("<%= organization_name %>", "<%= domain_name %>")
  }

  // commands
<% command_generators.each do |command| %>
  readonly <%= command.command_name %> = <%= command.command_name %>
<% end %>

  readonly entities: entitiesT = entities
}

export const <%= domain_name %> = new <%= domain_name %>Class


