{
  "command": {
    "Foobara::Ai::AnswerBot::Ask": {
      "scoped_path": [
        "Ask"
      ],
      "scoped_name": "Ask",
      "scoped_short_name": "Ask",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Ai",
        "AnswerBot",
        "Ask"
      ],
      "scoped_full_name": "Foobara::Ai::AnswerBot::Ask",
      "scoped_category": "command",
      "reference": "Foobara::Ai::AnswerBot::Ask",
      "domain": "Foobara::Ai::AnswerBot",
      "organization": "Foobara::Ai",
      "parent": [
        "domain",
        "Foobara::Ai::AnswerBot"
      ],
      "types_depended_on": [
        "Foobara::Ai::AnswerBot::model_enum",
        "Foobara::Ai::AnswerBot::service_enum",
        "array",
        "atomic_duck",
        "attributes",
        "duck",
        "string",
        "symbol"
      ],
      "inputs_types_depended_on": [
        "Foobara::Ai::AnswerBot::model_enum",
        "Foobara::Ai::AnswerBot::service_enum",
        "array",
        "attributes",
        "duck",
        "string",
        "symbol"
      ],
      "result_types_depended_on": [
        "array",
        "atomic_duck",
        "attributes",
        "duck",
        "symbol"
      ],
      "errors_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.instructions.cannot_cast": {
          "path": [
            "instructions"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.instructions.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.missing_required_attribute": {
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        },
        "data.model.cannot_cast": {
          "path": [
            "model"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.model.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.model.value_not_valid": {
          "path": [
            "model"
          ],
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.model.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        },
        "data.question.cannot_cast": {
          "path": [
            "question"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.question.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.question.missing_required_attribute": {
          "path": [
            "question"
          ],
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.question.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        },
        "data.service.cannot_cast": {
          "path": [
            "service"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.service.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.service.value_not_valid": {
          "path": [
            "service"
          ],
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.service.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        }
      },
      "depends_on": [
        "Foobara::Ai::AnthropicApi::CreateMessage"
      ],
      "inputs_type": {
        "type": "attributes",
        "element_type_declarations": {
          "question": {
            "description": "whatever you want to know!",
            "type": "string"
          },
          "instructions": {
            "description": "Results in a system prompt. You can specify how you want the LLM to behave.",
            "type": "string"
          },
          "service": {
            "description": "If two services expose the same model, you can specify which one to use.",
            "type": "Foobara::Ai::AnswerBot::service_enum"
          },
          "model": {
            "description": "The model to use.",
            "type": "Foobara::Ai::AnswerBot::model_enum"
          }
        },
        "required": [
          "question"
        ],
        "defaults": {
          "model": "claude-3-7-sonnet-20250219"
        }
      },
      "description": "Ask a question and receive the knowledge you seek.",
      "result_type": "string",
      "serializers": [
        "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
        "Foobara::CommandConnectors::Serializers::JsonSerializer"
      ]
    },
    "Foobara::Ai::AnswerBot::GenerateNextMessage": {
      "scoped_path": [
        "GenerateNextMessage"
      ],
      "scoped_name": "GenerateNextMessage",
      "scoped_short_name": "GenerateNextMessage",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Ai",
        "AnswerBot",
        "GenerateNextMessage"
      ],
      "scoped_full_name": "Foobara::Ai::AnswerBot::GenerateNextMessage",
      "scoped_category": "command",
      "reference": "Foobara::Ai::AnswerBot::GenerateNextMessage",
      "domain": "Foobara::Ai::AnswerBot",
      "organization": "Foobara::Ai",
      "parent": [
        "domain",
        "Foobara::Ai::AnswerBot"
      ],
      "types_depended_on": [
        "Foobara::Ai::AnswerBot::Types::Chat",
        "Foobara::Ai::AnswerBot::Types::Message",
        "Foobara::Ai::AnswerBot::model_enum",
        "Foobara::Ai::AnswerBot::service_enum",
        "array",
        "attributes",
        "duck",
        "float",
        "model",
        "string",
        "symbol"
      ],
      "inputs_types_depended_on": [
        "Foobara::Ai::AnswerBot::Types::Chat",
        "Foobara::Ai::AnswerBot::model_enum",
        "Foobara::Ai::AnswerBot::service_enum",
        "array",
        "attributes",
        "duck",
        "float",
        "symbol"
      ],
      "result_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "model",
        "string",
        "symbol"
      ],
      "errors_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.chat.cannot_cast": {
          "path": [
            "chat"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.chat.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.chat.messages.#.cannot_cast": {
          "path": [
            "chat",
            "messages",
            "#"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.chat.messages.#.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.chat.messages.#.content.cannot_cast": {
          "path": [
            "chat",
            "messages",
            "#",
            "content"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.chat.messages.#.content.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.chat.messages.#.role.cannot_cast": {
          "path": [
            "chat",
            "messages",
            "#",
            "role"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.chat.messages.#.role.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.chat.messages.#.role.value_not_valid": {
          "path": [
            "chat",
            "messages",
            "#",
            "role"
          ],
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.chat.messages.#.role.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        },
        "data.chat.messages.#.unexpected_attributes": {
          "path": [
            "chat",
            "messages",
            "#"
          ],
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.chat.messages.#.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        },
        "data.chat.messages.cannot_cast": {
          "path": [
            "chat",
            "messages"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.chat.messages.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.chat.missing_required_attribute": {
          "path": [
            "chat"
          ],
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.chat.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        },
        "data.chat.unexpected_attributes": {
          "path": [
            "chat"
          ],
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.chat.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        },
        "data.missing_required_attribute": {
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        },
        "data.model.cannot_cast": {
          "path": [
            "model"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.model.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.model.value_not_valid": {
          "path": [
            "model"
          ],
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.model.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        },
        "data.service.cannot_cast": {
          "path": [
            "service"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.service.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.service.value_not_valid": {
          "path": [
            "service"
          ],
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.service.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        },
        "data.temperature.cannot_cast": {
          "path": [
            "temperature"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.temperature.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        }
      },
      "depends_on": [
        "Foobara::Ai::AnthropicApi::CreateMessage"
      ],
      "inputs_type": {
        "type": "attributes",
        "element_type_declarations": {
          "chat": "Foobara::Ai::AnswerBot::Types::Chat",
          "service": {
            "description": "If two services expose the same model, you can specify which one to use.",
            "type": "Foobara::Ai::AnswerBot::service_enum"
          },
          "model": {
            "description": "The model to use.",
            "type": "Foobara::Ai::AnswerBot::model_enum"
          },
          "temperature": "float"
        },
        "required": [
          "chat"
        ],
        "defaults": {
          "model": "claude-3-7-sonnet-20250219"
        }
      },
      "description": "Takes a chat and generates the next message using the model of your choice.",
      "result_type": "Foobara::Ai::AnswerBot::Types::Message",
      "serializers": [
        "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
        "Foobara::CommandConnectors::Serializers::JsonSerializer"
      ]
    },
    "Foobara::Ai::AnswerBot::ListModels": {
      "scoped_path": [
        "ListModels"
      ],
      "scoped_name": "ListModels",
      "scoped_short_name": "ListModels",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Ai",
        "AnswerBot",
        "ListModels"
      ],
      "scoped_full_name": "Foobara::Ai::AnswerBot::ListModels",
      "scoped_category": "command",
      "reference": "Foobara::Ai::AnswerBot::ListModels",
      "domain": "Foobara::Ai::AnswerBot",
      "organization": "Foobara::Ai",
      "parent": [
        "domain",
        "Foobara::Ai::AnswerBot"
      ],
      "types_depended_on": [
        "Foobara::Ai::AnswerBot::Types::Model",
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "result_types_depended_on": [
        "Foobara::Ai::AnswerBot::Types::Model",
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "errors_types_depended_on": [
        "array",
        "attributes",
        "duck",
        "number",
        "symbol"
      ],
      "possible_errors": {},
      "depends_on": [
        "Foobara::Ai::AnthropicApi::ListModels"
      ],
      "inputs_type": {
        "type": "attributes",
        "element_type_declarations": {}
      },
      "description": "List of all model strings you can use",
      "result_type": {
        "type": "array",
        "element_type_declaration": "Foobara::Ai::AnswerBot::Types::Model"
      },
      "inputs_types_depended_on": [],
      "serializers": [
        "Foobara::CommandConnectors::Serializers::ErrorsSerializer",
        "Foobara::CommandConnectors::Serializers::JsonSerializer"
      ]
    }
  },
  "domain": {
    "Foobara::Ai::AnswerBot": {
      "scoped_path": [
        "AnswerBot"
      ],
      "scoped_name": "AnswerBot",
      "scoped_short_name": "AnswerBot",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Ai",
        "AnswerBot"
      ],
      "scoped_full_name": "Foobara::Ai::AnswerBot",
      "scoped_category": "domain",
      "reference": "Foobara::Ai::AnswerBot",
      "domain": "Foobara::Ai::AnswerBot",
      "organization": "Foobara::Ai",
      "parent": [
        "organization",
        "Foobara::Ai"
      ],
      "commands": [
        "Foobara::Ai::AnswerBot::Ask",
        "Foobara::Ai::AnswerBot::GenerateNextMessage",
        "Foobara::Ai::AnswerBot::ListModels"
      ],
      "types": [
        "Foobara::Ai::AnswerBot::Types::Chat",
        "Foobara::Ai::AnswerBot::Types::Message",
        "Foobara::Ai::AnswerBot::Types::Model",
        "Foobara::Ai::AnswerBot::model_enum",
        "Foobara::Ai::AnswerBot::service_enum"
      ],
      "depends_on": [
        "Foobara::Ai::AnthropicApi"
      ]
    },
    "global_organization::global_domain": {
      "scoped_path": [],
      "scoped_name": null,
      "scoped_short_name": null,
      "scoped_prefix": [],
      "scoped_full_path": [],
      "scoped_full_name": "",
      "scoped_category": "domain",
      "reference": "global_organization::global_domain",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "organization",
        "global_organization"
      ],
      "commands": [],
      "types": [
        "array",
        "associative_array",
        "atomic_duck",
        "attributes",
        "duck",
        "duckture",
        "float",
        "model",
        "number",
        "string",
        "symbol"
      ]
    }
  },
  "error": {
    "Foobara::Value::DataError": {
      "scoped_path": [
        "Foobara",
        "Value",
        "DataError"
      ],
      "scoped_name": "Foobara::Value::DataError",
      "scoped_short_name": "DataError",
      "scoped_prefix": [
        "Foobara",
        "Value"
      ],
      "scoped_full_path": [
        "Foobara",
        "Value",
        "DataError"
      ],
      "scoped_full_name": "Foobara::Value::DataError",
      "scoped_category": "error",
      "reference": "Foobara::Value::DataError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "data",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "attribute_name": "symbol",
          "value": "duck"
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::Value::DataError"
    },
    "Foobara::Value::Processor::Casting::CannotCastError": {
      "scoped_path": [
        "Foobara",
        "Value",
        "Processor",
        "Casting",
        "CannotCastError"
      ],
      "scoped_name": "Foobara::Value::Processor::Casting::CannotCastError",
      "scoped_short_name": "CannotCastError",
      "scoped_prefix": [
        "Foobara",
        "Value",
        "Processor",
        "Casting"
      ],
      "scoped_full_path": [
        "Foobara",
        "Value",
        "Processor",
        "Casting",
        "CannotCastError"
      ],
      "scoped_full_name": "Foobara::Value::Processor::Casting::CannotCastError",
      "scoped_category": "error",
      "reference": "Foobara::Value::Processor::Casting::CannotCastError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "cannot_cast",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "cast_to": "duck",
          "value": "duck",
          "attribute_name": "symbol"
        }
      },
      "is_fatal": true,
      "error_class": "Foobara::Value::Processor::Casting::CannotCastError",
      "base_error": "Foobara::Value::DataError"
    },
    "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError": {
      "scoped_path": [
        "UnexpectedAttributesError"
      ],
      "scoped_name": "UnexpectedAttributesError",
      "scoped_short_name": "UnexpectedAttributesError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "attributes",
        "SupportedProcessors",
        "ElementTypeDeclarations",
        "UnexpectedAttributesError"
      ],
      "scoped_full_name": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError",
      "scoped_category": "error",
      "reference": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "attributes"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "unexpected_attributes",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "unexpected_attributes": {
            "type": "array",
            "element_type_declaration": "symbol"
          },
          "allowed_attributes": {
            "type": "array",
            "element_type_declaration": "symbol"
          }
        }
      },
      "is_fatal": true,
      "error_class": "Foobara::BuiltinTypes::Attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError",
      "base_error": "Foobara::Value::DataError"
    },
    "attributes::SupportedValidators::Required::MissingRequiredAttributeError": {
      "scoped_path": [
        "MissingRequiredAttributeError"
      ],
      "scoped_name": "MissingRequiredAttributeError",
      "scoped_short_name": "MissingRequiredAttributeError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "attributes",
        "SupportedValidators",
        "Required",
        "MissingRequiredAttributeError"
      ],
      "scoped_full_name": "attributes::SupportedValidators::Required::MissingRequiredAttributeError",
      "scoped_category": "error",
      "reference": "attributes::SupportedValidators::Required::MissingRequiredAttributeError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "attributes"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "missing_required_attribute",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "attribute_name": "symbol"
        }
      },
      "is_fatal": true,
      "error_class": "Foobara::BuiltinTypes::Attributes::SupportedValidators::Required::MissingRequiredAttributeError",
      "base_error": "Foobara::Value::DataError"
    },
    "duck::SupportedValidators::OneOf::ValueNotValidError": {
      "scoped_path": [
        "ValueNotValidError"
      ],
      "scoped_name": "ValueNotValidError",
      "scoped_short_name": "ValueNotValidError",
      "scoped_prefix": null,
      "scoped_full_path": [
        "duck",
        "SupportedValidators",
        "OneOf",
        "ValueNotValidError"
      ],
      "scoped_full_name": "duck::SupportedValidators::OneOf::ValueNotValidError",
      "scoped_category": "error",
      "reference": "duck::SupportedValidators::OneOf::ValueNotValidError",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "type",
        "duck"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "category": "data",
      "symbol": "value_not_valid",
      "context_type_declaration": {
        "type": "attributes",
        "element_type_declarations": {
          "value": "duck",
          "valid_values": {
            "type": "array",
            "element_type_declaration": "duck"
          }
        }
      },
      "is_fatal": false,
      "error_class": "Foobara::BuiltinTypes::Duck::SupportedValidators::OneOf::ValueNotValidError",
      "base_error": "Foobara::Value::DataError"
    }
  },
  "organization": {
    "Foobara::Ai": {
      "scoped_path": [
        "Foobara",
        "Ai"
      ],
      "scoped_name": "Foobara::Ai",
      "scoped_short_name": "Ai",
      "scoped_prefix": [
        "Foobara"
      ],
      "scoped_full_path": [
        "Foobara",
        "Ai"
      ],
      "scoped_full_name": "Foobara::Ai",
      "scoped_category": "organization",
      "reference": "Foobara::Ai",
      "domain": "global_organization::global_domain",
      "organization": "Foobara::Ai",
      "domains": [
        "Foobara::Ai::AnswerBot"
      ]
    },
    "global_organization": {
      "scoped_path": [],
      "scoped_name": null,
      "scoped_short_name": null,
      "scoped_prefix": [],
      "scoped_full_path": [],
      "scoped_full_name": "",
      "scoped_category": "organization",
      "reference": "global_organization",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "domains": [
        "global_organization::global_domain"
      ]
    }
  },
  "type": {
    "Foobara::Ai::AnswerBot::Types::Chat": {
      "scoped_path": [
        "Types",
        "Chat"
      ],
      "scoped_name": "Types::Chat",
      "scoped_short_name": "Chat",
      "scoped_prefix": [
        "Types"
      ],
      "scoped_full_path": [
        "Foobara",
        "Ai",
        "AnswerBot",
        "Types",
        "Chat"
      ],
      "scoped_full_name": "Foobara::Ai::AnswerBot::Types::Chat",
      "scoped_category": "type",
      "reference": "Foobara::Ai::AnswerBot::Types::Chat",
      "domain": "Foobara::Ai::AnswerBot",
      "organization": "Foobara::Ai",
      "parent": [
        "domain",
        "Foobara::Ai::AnswerBot"
      ],
      "declaration_data": {
        "type": "model",
        "name": "Types::Chat",
        "model_module": "Foobara::Ai::AnswerBot",
        "model_class": "Foobara::Ai::AnswerBot::Types::Chat",
        "model_base_class": "Foobara::Model",
        "attributes_declaration": {
          "type": "attributes",
          "element_type_declarations": {
            "messages": {
              "type": "array",
              "element_type_declaration": "Foobara::Ai::AnswerBot::Types::Message"
            }
          }
        }
      },
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.messages.#.cannot_cast": {
          "path": [
            "messages",
            "#"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.messages.#.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.messages.#.content.cannot_cast": {
          "path": [
            "messages",
            "#",
            "content"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.messages.#.content.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.messages.#.role.cannot_cast": {
          "path": [
            "messages",
            "#",
            "role"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.messages.#.role.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.messages.#.role.value_not_valid": {
          "path": [
            "messages",
            "#",
            "role"
          ],
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.messages.#.role.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        },
        "data.messages.#.unexpected_attributes": {
          "path": [
            "messages",
            "#"
          ],
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.messages.#.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        },
        "data.messages.cannot_cast": {
          "path": [
            "messages"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.messages.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        }
      },
      "name": "Types::Chat",
      "target_classes": [
        "Foobara::Ai::AnswerBot::Types::Chat"
      ],
      "types_depended_on": [
        "Foobara::Ai::AnswerBot::Types::Message",
        "array",
        "attributes",
        "duck",
        "model",
        "symbol"
      ],
      "description": null,
      "base_type": "model",
      "attributes_type": {
        "type": "attributes",
        "element_type_declarations": {
          "messages": {
            "type": "array",
            "element_type_declaration": "Foobara::Ai::AnswerBot::Types::Message"
          }
        }
      },
      "organization_name": "Foobara::Ai",
      "domain_name": "AnswerBot",
      "model_name": "Types::Chat",
      "model_base_class": "Foobara::Model",
      "model_class": "Foobara::Ai::AnswerBot::Types::Chat"
    },
    "Foobara::Ai::AnswerBot::Types::Message": {
      "scoped_path": [
        "Types",
        "Message"
      ],
      "scoped_name": "Types::Message",
      "scoped_short_name": "Message",
      "scoped_prefix": [
        "Types"
      ],
      "scoped_full_path": [
        "Foobara",
        "Ai",
        "AnswerBot",
        "Types",
        "Message"
      ],
      "scoped_full_name": "Foobara::Ai::AnswerBot::Types::Message",
      "scoped_category": "type",
      "reference": "Foobara::Ai::AnswerBot::Types::Message",
      "domain": "Foobara::Ai::AnswerBot",
      "organization": "Foobara::Ai",
      "parent": [
        "domain",
        "Foobara::Ai::AnswerBot"
      ],
      "declaration_data": {
        "type": "model",
        "name": "Types::Message",
        "model_module": "Foobara::Ai::AnswerBot",
        "model_class": "Foobara::Ai::AnswerBot::Types::Message",
        "model_base_class": "Foobara::Model",
        "attributes_declaration": {
          "type": "attributes",
          "element_type_declarations": {
            "role": {
              "one_of": [
                "assistant",
                "user",
                "system"
              ],
              "type": "symbol"
            },
            "content": "string"
          }
        }
      },
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.content.cannot_cast": {
          "path": [
            "content"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.content.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.role.cannot_cast": {
          "path": [
            "role"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.role.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.role.value_not_valid": {
          "path": [
            "role"
          ],
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.role.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        }
      },
      "name": "Types::Message",
      "target_classes": [
        "Foobara::Ai::AnswerBot::Types::Message"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "model",
        "string",
        "symbol"
      ],
      "description": null,
      "base_type": "model",
      "attributes_type": {
        "type": "attributes",
        "element_type_declarations": {
          "role": {
            "one_of": [
              "assistant",
              "user",
              "system"
            ],
            "type": "symbol"
          },
          "content": "string"
        }
      },
      "organization_name": "Foobara::Ai",
      "domain_name": "AnswerBot",
      "model_name": "Types::Message",
      "model_base_class": "Foobara::Model",
      "model_class": "Foobara::Ai::AnswerBot::Types::Message"
    },
    "Foobara::Ai::AnswerBot::Types::Model": {
      "scoped_path": [
        "Types",
        "Model"
      ],
      "scoped_name": "Types::Model",
      "scoped_short_name": "Model",
      "scoped_prefix": [
        "Types"
      ],
      "scoped_full_path": [
        "Foobara",
        "Ai",
        "AnswerBot",
        "Types",
        "Model"
      ],
      "scoped_full_name": "Foobara::Ai::AnswerBot::Types::Model",
      "scoped_category": "type",
      "reference": "Foobara::Ai::AnswerBot::Types::Model",
      "domain": "Foobara::Ai::AnswerBot",
      "organization": "Foobara::Ai",
      "parent": [
        "domain",
        "Foobara::Ai::AnswerBot"
      ],
      "declaration_data": {
        "type": "model",
        "name": "Types::Model",
        "model_module": "Foobara::Ai::AnswerBot",
        "model_class": "Foobara::Ai::AnswerBot::Types::Model",
        "model_base_class": "Foobara::Model",
        "attributes_declaration": {
          "type": "attributes",
          "element_type_declarations": {
            "id": "Foobara::Ai::AnswerBot::model_enum",
            "service": "Foobara::Ai::AnswerBot::service_enum"
          },
          "required": [
            "id",
            "service"
          ]
        }
      },
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.id.cannot_cast": {
          "path": [
            "id"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.id.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.id.missing_required_attribute": {
          "path": [
            "id"
          ],
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.id.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        },
        "data.id.value_not_valid": {
          "path": [
            "id"
          ],
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.id.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        },
        "data.missing_required_attribute": {
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        },
        "data.service.cannot_cast": {
          "path": [
            "service"
          ],
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.service.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.service.missing_required_attribute": {
          "path": [
            "service"
          ],
          "category": "data",
          "symbol": "missing_required_attribute",
          "key": "data.service.missing_required_attribute",
          "error": "attributes::SupportedValidators::Required::MissingRequiredAttributeError"
        },
        "data.service.value_not_valid": {
          "path": [
            "service"
          ],
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.service.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        },
        "data.unexpected_attributes": {
          "category": "data",
          "symbol": "unexpected_attributes",
          "key": "data.unexpected_attributes",
          "error": "attributes::SupportedProcessors::ElementTypeDeclarations::UnexpectedAttributesError"
        }
      },
      "name": "Types::Model",
      "target_classes": [
        "Foobara::Ai::AnswerBot::Types::Model"
      ],
      "types_depended_on": [
        "Foobara::Ai::AnswerBot::model_enum",
        "Foobara::Ai::AnswerBot::service_enum",
        "array",
        "attributes",
        "duck",
        "model",
        "symbol"
      ],
      "description": null,
      "base_type": "model",
      "attributes_type": {
        "type": "attributes",
        "element_type_declarations": {
          "id": "Foobara::Ai::AnswerBot::model_enum",
          "service": "Foobara::Ai::AnswerBot::service_enum"
        },
        "required": [
          "id",
          "service"
        ]
      },
      "organization_name": "Foobara::Ai",
      "domain_name": "AnswerBot",
      "model_name": "Types::Model",
      "model_base_class": "Foobara::Model",
      "model_class": "Foobara::Ai::AnswerBot::Types::Model"
    },
    "Foobara::Ai::AnswerBot::model_enum": {
      "scoped_path": [
        "model_enum"
      ],
      "scoped_name": "model_enum",
      "scoped_short_name": "model_enum",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Ai",
        "AnswerBot",
        "model_enum"
      ],
      "scoped_full_name": "Foobara::Ai::AnswerBot::model_enum",
      "scoped_category": "type",
      "reference": "Foobara::Ai::AnswerBot::model_enum",
      "domain": "Foobara::Ai::AnswerBot",
      "organization": "Foobara::Ai",
      "parent": [
        "domain",
        "Foobara::Ai::AnswerBot"
      ],
      "declaration_data": {
        "one_of": [
          "claude-3-5-haiku-20241022",
          "claude-3-5-sonnet-20240620",
          "claude-3-5-sonnet-20241022",
          "claude-3-7-sonnet-20250219",
          "claude-3-haiku-20240307",
          "claude-3-opus-20240229",
          "claude-opus-4-1-20250805",
          "claude-opus-4-20250514",
          "claude-sonnet-4-20250514"
        ],
        "type": "symbol"
      },
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.value_not_valid": {
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        }
      },
      "name": "Anonymous symbol extension",
      "target_classes": [
        "Symbol"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "description": null,
      "base_type": "symbol"
    },
    "Foobara::Ai::AnswerBot::service_enum": {
      "scoped_path": [
        "service_enum"
      ],
      "scoped_name": "service_enum",
      "scoped_short_name": "service_enum",
      "scoped_prefix": null,
      "scoped_full_path": [
        "Foobara",
        "Ai",
        "AnswerBot",
        "service_enum"
      ],
      "scoped_full_name": "Foobara::Ai::AnswerBot::service_enum",
      "scoped_category": "type",
      "reference": "Foobara::Ai::AnswerBot::service_enum",
      "domain": "Foobara::Ai::AnswerBot",
      "organization": "Foobara::Ai",
      "parent": [
        "domain",
        "Foobara::Ai::AnswerBot"
      ],
      "declaration_data": {
        "one_of": [
          "anthropic",
          "ollama",
          "open-ai"
        ],
        "type": "symbol"
      },
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        },
        "data.value_not_valid": {
          "category": "data",
          "symbol": "value_not_valid",
          "key": "data.value_not_valid",
          "error": "duck::SupportedValidators::OneOf::ValueNotValidError"
        }
      },
      "name": "Anonymous symbol extension",
      "target_classes": [
        "Symbol"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "description": null,
      "base_type": "symbol"
    },
    "array": {
      "scoped_path": [
        "array"
      ],
      "scoped_name": "array",
      "scoped_short_name": "array",
      "scoped_prefix": [],
      "scoped_full_path": [
        "array"
      ],
      "scoped_full_name": "array",
      "scoped_category": "type",
      "reference": "array",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "array",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "array",
      "target_classes": [
        "Array"
      ],
      "types_depended_on": [
        "attributes",
        "duck",
        "duckture",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in array type",
      "base_type": "duckture"
    },
    "associative_array": {
      "scoped_path": [
        "associative_array"
      ],
      "scoped_name": "associative_array",
      "scoped_short_name": "associative_array",
      "scoped_prefix": [],
      "scoped_full_path": [
        "associative_array"
      ],
      "scoped_full_name": "associative_array",
      "scoped_category": "type",
      "reference": "associative_array",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "associative_array",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "associative_array",
      "target_classes": [
        "Hash"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "duckture",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in associative_array type",
      "base_type": "duckture"
    },
    "atomic_duck": {
      "scoped_path": [
        "atomic_duck"
      ],
      "scoped_name": "atomic_duck",
      "scoped_short_name": "atomic_duck",
      "scoped_prefix": [],
      "scoped_full_path": [
        "atomic_duck"
      ],
      "scoped_full_name": "atomic_duck",
      "scoped_category": "type",
      "reference": "atomic_duck",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "atomic_duck",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "atomic_duck",
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in atomic_duck type",
      "base_type": "duck"
    },
    "attributes": {
      "scoped_path": [
        "attributes"
      ],
      "scoped_name": "attributes",
      "scoped_short_name": "attributes",
      "scoped_prefix": [],
      "scoped_full_path": [
        "attributes"
      ],
      "scoped_full_name": "attributes",
      "scoped_category": "type",
      "reference": "attributes",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "attributes",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "attributes",
      "types_depended_on": [
        "array",
        "associative_array",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in attributes type",
      "base_type": "associative_array"
    },
    "duck": {
      "scoped_path": [
        "duck"
      ],
      "scoped_name": "duck",
      "scoped_short_name": "duck",
      "scoped_prefix": [],
      "scoped_full_path": [
        "duck"
      ],
      "scoped_full_name": "duck",
      "scoped_category": "type",
      "reference": "duck",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "duck",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "duck",
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in duck type",
      "base_type": null
    },
    "duckture": {
      "scoped_path": [
        "duckture"
      ],
      "scoped_name": "duckture",
      "scoped_short_name": "duckture",
      "scoped_prefix": [],
      "scoped_full_path": [
        "duckture"
      ],
      "scoped_full_name": "duckture",
      "scoped_category": "type",
      "reference": "duckture",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "duckture",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "duckture",
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in duckture type",
      "base_type": "duck"
    },
    "float": {
      "scoped_path": [
        "float"
      ],
      "scoped_name": "float",
      "scoped_short_name": "float",
      "scoped_prefix": [],
      "scoped_full_path": [
        "float"
      ],
      "scoped_full_name": "float",
      "scoped_category": "type",
      "reference": "float",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "float",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "float",
      "target_classes": [
        "Float"
      ],
      "types_depended_on": [
        "array",
        "attributes",
        "duck",
        "number",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in float type",
      "base_type": "number"
    },
    "model": {
      "scoped_path": [
        "model"
      ],
      "scoped_name": "model",
      "scoped_short_name": "model",
      "scoped_prefix": [],
      "scoped_full_path": [
        "model"
      ],
      "scoped_full_name": "model",
      "scoped_category": "type",
      "reference": "model",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "model",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "model",
      "types_depended_on": [
        "array",
        "atomic_duck",
        "attributes",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in model type",
      "base_type": "atomic_duck"
    },
    "number": {
      "scoped_path": [
        "number"
      ],
      "scoped_name": "number",
      "scoped_short_name": "number",
      "scoped_prefix": [],
      "scoped_full_path": [
        "number"
      ],
      "scoped_full_name": "number",
      "scoped_category": "type",
      "reference": "number",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "number",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "number",
      "target_classes": [
        "Object"
      ],
      "types_depended_on": [
        "array",
        "atomic_duck",
        "attributes",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in number type",
      "base_type": "atomic_duck"
    },
    "string": {
      "scoped_path": [
        "string"
      ],
      "scoped_name": "string",
      "scoped_short_name": "string",
      "scoped_prefix": [],
      "scoped_full_path": [
        "string"
      ],
      "scoped_full_name": "string",
      "scoped_category": "type",
      "reference": "string",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "string",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "string",
      "target_classes": [
        "String"
      ],
      "types_depended_on": [
        "array",
        "atomic_duck",
        "attributes",
        "duck",
        "symbol"
      ],
      "builtin": true,
      "description": "Built-in string type",
      "base_type": "atomic_duck"
    },
    "symbol": {
      "scoped_path": [
        "symbol"
      ],
      "scoped_name": "symbol",
      "scoped_short_name": "symbol",
      "scoped_prefix": [],
      "scoped_full_path": [
        "symbol"
      ],
      "scoped_full_name": "symbol",
      "scoped_category": "type",
      "reference": "symbol",
      "domain": "global_organization::global_domain",
      "organization": "global_organization",
      "parent": [
        "domain",
        "global_organization::global_domain"
      ],
      "declaration_data": "symbol",
      "possible_errors": {
        "data.cannot_cast": {
          "category": "data",
          "symbol": "cannot_cast",
          "key": "data.cannot_cast",
          "error": "Foobara::Value::Processor::Casting::CannotCastError"
        }
      },
      "name": "symbol",
      "target_classes": [
        "Symbol"
      ],
      "types_depended_on": [
        "array",
        "atomic_duck",
        "attributes",
        "duck"
      ],
      "builtin": true,
      "description": "Built-in symbol type",
      "base_type": "atomic_duck"
    }
  },
  "metadata": {
    "when": "2025-08-25 17:37:31 -0700",
    "url": "http://localhost:9292/manifest"
  }
}
