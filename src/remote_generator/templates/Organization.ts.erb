import { Organization } from "<%= path_to_root %>base/Organization"
import { Domain } from "<%= path_to_root %>base/Domain"
<% domain_generators.each do |domain| %>
import {<%= domain.domain_name %>} from "<%= path_to_root %><%= domain.import_path %>"
<% end %>

export class <%= organization_name %>Class extends Organization {
  constructor() {
    super("<%= organization_name %>")
  }
<% domain_generators.each do |domain| %>
  readonly <%= domain.domain_name %>: typeof <%= domain.domain_name %> = <%= domain.domain_name %>
<% end %>

  domainForName(name: string): Domain {
    const domain = {
  <% domain_generators.each do |domain| %>
  <%= domain.domain_name %>: <%= domain.domain_name %>,
  <% end %>
}[name]

    if (domain == null) {
      throw new Error(`Unknown domain name: ${name}`)
    }

    return domain
  }
}

export const <%= organization_name %> = new <%= organization_name %>Class
